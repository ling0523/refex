!function(t,Q){"object"==typeof exports&&"object"==typeof module?module.exports=Q():"function"==typeof define&&define.amd?define([],Q):"object"==typeof exports?exports.Refex=Q():t.Refex=Q()}(window,function(){return function(t){var Q={};function F(B){if(Q[B])return Q[B].exports;var c=Q[B]={i:B,l:!1,exports:{}};return t[B].call(c.exports,c,c.exports,F),c.l=!0,c.exports}return F.m=t,F.c=Q,F.d=function(t,Q,B){F.o(t,Q)||Object.defineProperty(t,Q,{enumerable:!0,get:B})},F.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},F.t=function(t,Q){if(1&Q&&(t=F(t)),8&Q)return t;if(4&Q&&"object"==typeof t&&t&&t.__esModule)return t;var B=Object.create(null);if(F.r(B),Object.defineProperty(B,"default",{enumerable:!0,value:t}),2&Q&&"string"!=typeof t)for(var c in t)F.d(B,c,function(Q){return t[Q]}.bind(null,c));return B},F.n=function(t){var Q=t&&t.__esModule?function(){return t.default}:function(){return t};return F.d(Q,"a",Q),Q},F.o=function(t,Q){return Object.prototype.hasOwnProperty.call(t,Q)},F.p="",F(F.s=1)}([function(module,exports,__webpack_require__){"use strict";eval("\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\r\n * 虚拟节点\r\n */\nvar VNode = function () {\n\tfunction VNode(tag, attrs, cls, directives, events, text, id, nodeType) {\n\t\t_classCallCheck(this, VNode);\n\n\t\t//标签名称\n\t\tthis.tag = tag;\n\t\t//属性集合\n\t\tthis.attrs = attrs;\n\t\t//样式类集合\n\t\tthis.cls = cls;\n\t\t//指令集合\n\t\tthis.directives = directives;\n\t\t//事件集合\n\t\tthis.events = events;\n\t\t//节点文字\n\t\tthis.text = text;\n\t\t//节点id\n\t\tthis.id = id;\n\t\t//节点类型\n\t\tthis.nodeType = nodeType;\n\t\t//父虚拟节点\n\t\tthis.parent = undefined;\n\t\t//子虚拟节点列表\n\t\tthis.children = [];\n\t\t//是否克隆节点\n\t\tthis.isCloned = false;\n\t\t//对应的真实dom\n\t\tthis.elm = undefined;\n\t\t//是否渲染\n\t\tthis.if = true;\n\t\t//for指令遍历数据\n\t\tthis.forData = {};\n\t\t//是否使用了if指令\n\t\tthis.useIf = false;\n\t\t//是否使用了else-if指令\n\t\tthis.useElseIf = false;\n\t\t//是否使用了else指令\n\t\tthis.useElse = false;\n\t}\n\n\t/**\r\n  * 处理for指令克隆节点\r\n  * @param {State} state State实例\r\n  */\n\n\n\t_createClass(VNode, [{\n\t\tkey: 'dealFor',\n\t\tvalue: function dealFor(state) {\n\t\t\tvar _this = this;\n\n\t\t\t//该节点含有for指令，即需要进行克隆处理\n\t\t\tif (this.directives['for']) {\n\t\t\t\tvar _parent$children;\n\n\t\t\t\t//设置作用域\n\t\t\t\tvar scope = Object.assign({}, state.$data);\n\t\t\t\tObject.assign(scope, this.getForData());\n\t\t\t\t//解析for指令表达式\n\t\t\t\tvar res = this.parseFor(scope, this.directives['for'].exp);\n\t\t\t\t//表达式不合法\n\t\t\t\tif (!res) {\n\t\t\t\t\tthrow new Error('Invalid @for expression: ' + this.directives['for'].exp);\n\t\t\t\t}\n\t\t\t\t//原directives集合中去除for\n\t\t\t\tdelete this.directives['for'];\n\t\t\t\t//获取当前虚拟节点在父节点中的位置\n\t\t\t\tvar dex = this.getIndex();\n\t\t\t\t//创建一个空数组存放克隆的节点\n\t\t\t\tvar cloneVnodes = [];\n\t\t\t\t//如果循环的是数组\n\t\t\t\tif (Array.isArray(res.for)) {\n\t\t\t\t\tvar length = res.for.length;\n\t\t\t\t\t//遍历数组\n\t\t\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\t\t\t//克隆节点\n\t\t\t\t\t\tvar copyVn = this.clone(i, res, i);\n\t\t\t\t\t\t//设置父节点\n\t\t\t\t\t\tcopyVn.parent = this.parent;\n\t\t\t\t\t\t//加入数组中\n\t\t\t\t\t\tcloneVnodes.push(copyVn);\n\t\t\t\t\t\t//递归处理子节点的for指令\n\t\t\t\t\t\tcopyVn.children.forEach(function (childVnode) {\n\t\t\t\t\t\t\tchildVnode.dealFor(state);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t//如果循环的是对象\n\t\t\t\telse if (_typeof(res.for) == 'object') {\n\t\t\t\t\t\t//遍历对象\n\t\t\t\t\t\tObject.keys(res.for).forEach(function (key, index) {\n\t\t\t\t\t\t\t//克隆节点\n\t\t\t\t\t\t\tvar copyVn = _this.clone(index, res, index, key);\n\t\t\t\t\t\t\t//设置父节点\n\t\t\t\t\t\t\tcopyVn.parent = _this.parent;\n\t\t\t\t\t\t\t//加入数组\n\t\t\t\t\t\t\tcloneVnodes.push(copyVn);\n\t\t\t\t\t\t\t//递归处理子节点的for指令\n\t\t\t\t\t\t\tcopyVn.children.forEach(function (childVnode) {\n\t\t\t\t\t\t\t\tchildVnode.dealFor(state);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t//删除该节点，添加克隆的节点\n\t\t\t\t(_parent$children = this.parent.children).splice.apply(_parent$children, [dex, 1].concat(cloneVnodes));\n\t\t\t}\n\t\t\t//该节点无需进行克隆处理，进行递归遍历子节点\n\t\t\telse {\n\t\t\t\t\tthis.children.forEach(function (childVnode) {\n\t\t\t\t\t\tchildVnode.dealFor(state);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t}\n\n\t\t/**\r\n   * 虚拟节点的数据初始化：将一个未初始化的虚拟节点转为含有真实数据的虚拟节点\r\n   * @param {State} state State实例\r\n   */\n\n\t}, {\n\t\tkey: 'init',\n\t\tvalue: function init(state) {\n\t\t\t//设置作用域\n\t\t\tvar scope = Object.assign({}, state.$data);\n\t\t\tObject.assign(scope, this.getForData());\n\t\t\t//元素节点进行初始化\n\t\t\tif (this.nodeType == 1) {\n\t\t\t\t//if指令提取出来，单独作为if属性\n\t\t\t\tif (this.directives['if']) {\n\t\t\t\t\t//使用if时同时存在else-if、else则报错\n\t\t\t\t\tif (this.directives['else-if'] || this.directives['else']) {\n\t\t\t\t\t\tthrow new Error('\"@if\" and \"@else-if\" and \"@else\" cannot be used on the same node');\n\t\t\t\t\t}\n\t\t\t\t\t//解析指令的表达式值\n\t\t\t\t\tthis.if = this.parseExpression(scope, this.directives['if'].exp);\n\t\t\t\t\t//进行标记\n\t\t\t\t\tthis.useIf = true;\n\t\t\t\t\t//从指令集合移除\n\t\t\t\t\tdelete this.directives['if'];\n\t\t\t\t}\n\n\t\t\t\t//else-if指令提取出来，单独作为if属性\n\t\t\t\tif (this.directives['else-if']) {\n\t\t\t\t\t//使用else-if时同时存在else则报错\n\t\t\t\t\tif (this.directives['else']) {\n\t\t\t\t\t\tthrow new Error('\"@else-if\" and \"@else\" cannot be used on the same node');\n\t\t\t\t\t}\n\t\t\t\t\t//获取上一个兄弟节点\n\t\t\t\t\tvar brotherNode = this.getPrevBrotherNode();\n\t\t\t\t\t//上一个兄弟节点不存在或者没有使用@if则直接报错\n\t\t\t\t\tif (!brotherNode || !brotherNode.useIf) {\n\t\t\t\t\t\tthrow new Error('\"@else-if\" cannot be used alone');\n\t\t\t\t\t}\n\t\t\t\t\t//上一个兄弟节点的if为true则不渲染\n\t\t\t\t\tif (brotherNode.if) {\n\t\t\t\t\t\tthis.if = false;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t//解析指令的表达式值\n\t\t\t\t\t\tthis.if = this.parseExpression(scope, this.directives['else-if'].exp);\n\t\t\t\t\t}\n\t\t\t\t\t//进行标记\n\t\t\t\t\tthis.useElseIf = true;\n\t\t\t\t\t//从指令集合移除\n\t\t\t\t\tdelete this.directives['else-if'];\n\t\t\t\t}\n\n\t\t\t\t//else指令提取出来，单独作为if属性\n\t\t\t\tif (this.directives['else']) {\n\t\t\t\t\t//获取上一个兄弟节点\n\t\t\t\t\tvar _brotherNode = this.getPrevBrotherNode();\n\t\t\t\t\t//上一个兄弟节点不存在或者没有使用@if和@else-if，则直接报错\n\t\t\t\t\tif (!_brotherNode || !_brotherNode.useIf && !_brotherNode.useElseIf) {\n\t\t\t\t\t\tthrow new Error('\"@else\" cannot be used alone');\n\t\t\t\t\t}\n\t\t\t\t\t//上一个兄弟节点使用的是@if\n\t\t\t\t\tif (_brotherNode.useIf) {\n\t\t\t\t\t\tif (_brotherNode.if) {\n\t\t\t\t\t\t\tthis.if = false;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.if = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t//上一个兄弟节点使用的是@else-if\n\t\t\t\t\telse if (_brotherNode.useElseIf) {\n\t\t\t\t\t\t\t//获取该节点的上一个兄弟节点\n\t\t\t\t\t\t\tvar brotherNode2 = _brotherNode.getPrevBrotherNode();\n\t\t\t\t\t\t\t//该节点的上一个兄弟节点没有使用@if直接报错\n\t\t\t\t\t\t\tif (!brotherNode2 || !brotherNode2.useIf) {\n\t\t\t\t\t\t\t\tthrow new Error('\"@else\" cannot be used alone');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (_brotherNode.if || brotherNode2.if) {\n\t\t\t\t\t\t\t\tthis.if = false;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.if = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t//进行标记\n\t\t\t\t\tthis.useElse = true;\n\t\t\t\t\t//从指令集合移除\n\t\t\t\t\tdelete this.directives['else'];\n\t\t\t\t}\n\n\t\t\t\t//解析其他指令\n\t\t\t\tfor (var name in this.directives) {\n\t\t\t\t\t//指令未定义报错\n\t\t\t\t\tif (!state.$directives[name]) {\n\t\t\t\t\t\tthrow new Error('The @' + name + ' directive is undefined');\n\t\t\t\t\t}\n\t\t\t\t\t//存储表达式对应的真实的值\n\t\t\t\t\tthis.directives[name].value = this.parseExpression(scope, this.directives[name].exp);\n\t\t\t\t}\n\n\t\t\t\t//初始化属性\n\t\t\t\tvar attrs = {};\n\t\t\t\tfor (var attr in this.attrs) {\n\t\t\t\t\tvar realAttrName = '';\n\t\t\t\t\tvar realAttrValue = null;\n\t\t\t\t\t//真实属性名称解析\n\t\t\t\t\trealAttrName = this.parseText(scope, attr);\n\t\t\t\t\t//判断属性值是否只是一对{{}}\n\t\t\t\t\tvar matchArray = this.attrs[attr].match(/^\\{\\{(.*?)\\}\\}$/g);\n\t\t\t\t\t//一对{{}}\n\t\t\t\t\tif (matchArray) {\n\t\t\t\t\t\tvar endIndex = this.attrs[attr].trim().length - 2;\n\t\t\t\t\t\tvar exp = this.attrs[attr].trim().substring(2, endIndex);\n\t\t\t\t\t\t//解析成数据\n\t\t\t\t\t\trealAttrValue = this.parseExpression(scope, exp);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t//直接解析为字符串\n\t\t\t\t\t\trealAttrValue = this.parseText(scope, this.attrs[attr]);\n\t\t\t\t\t}\n\t\t\t\t\t//属性为空字符串的话，直接设为true\n\t\t\t\t\tif (realAttrValue === '') {\n\t\t\t\t\t\trealAttrValue = true;\n\t\t\t\t\t}\n\t\t\t\t\tattrs[realAttrName] = realAttrValue;\n\t\t\t\t}\n\t\t\t\tthis.attrs = attrs;\n\n\t\t\t\t//初始化样式，此时this.cls为字符串\n\t\t\t\tif (this.cls) {\n\t\t\t\t\t//判断样式值是否只是一对{{}}\n\t\t\t\t\tvar clsMatchArray = this.cls.match(/^\\{\\{(.*?)\\}\\}$/g);\n\t\t\t\t\tvar cls = {};\n\t\t\t\t\t//一对{{}}\n\t\t\t\t\tif (clsMatchArray) {\n\t\t\t\t\t\tvar _endIndex = this.cls.trim().length - 2;\n\t\t\t\t\t\tvar _exp = this.cls.trim().substring(2, _endIndex);\n\t\t\t\t\t\t//解析成数据\n\t\t\t\t\t\tvar data = this.parseExpression(scope, _exp);\n\t\t\t\t\t\t//如果是数组，转为对象\n\t\t\t\t\t\tif (Array.isArray(data)) {\n\t\t\t\t\t\t\tdata.forEach(function (item) {\n\t\t\t\t\t\t\t\tcls[item] = true;\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\t//如果是对象直接存储\n\t\t\t\t\t\telse if ((typeof data === 'undefined' ? 'undefined' : _typeof(data)) == 'object' && data) {\n\t\t\t\t\t\t\t\tcls = Object.assign({}, data);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t//如果是字符串\n\t\t\t\t\t\t\telse if (typeof data == 'string' && data) {\n\t\t\t\t\t\t\t\t\tcls[data] = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t//其他情况\n\t\t\t\t\telse {\n\t\t\t\t\t\t\t//直接解析为字符串后以空格划分为数组，然后转为对象\n\t\t\t\t\t\t\tthis.parseText(scope, this.cls).split(/\\s+/g).forEach(function (item) {\n\t\t\t\t\t\t\t\tcls[item] = true;\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\tthis.cls = cls;\n\t\t\t\t} else {\n\t\t\t\t\tthis.cls = {};\n\t\t\t\t}\n\n\t\t\t\t//初始化事件\n\t\t\t\tfor (var eventName in this.events) {\n\t\t\t\t\tthis.events[eventName] = this.eventHandler(scope, eventName);\n\t\t\t\t}\n\t\t\t}\n\t\t\t//文本节点初始化\n\t\t\telse if (this.nodeType == 3) {\n\t\t\t\t\tthis.text = this.parseText(scope, this.text);\n\t\t\t\t}\n\t\t\t//递归对子节点进行初始化\n\t\t\tthis.children.forEach(function (childVnode) {\n\t\t\t\tchildVnode.init(state);\n\t\t\t});\n\t\t}\n\n\t\t/**\r\n   * 事件数据初始化，返回事件方法、修饰符和回调参数\r\n   * @param {Object} scope \r\n   * @param {String} eventName\r\n   */\n\n\t}, {\n\t\tkey: 'eventHandler',\n\t\tvalue: function eventHandler(scope, eventName) {\n\t\t\tvar _this2 = this;\n\n\t\t\t//定义处理函数\n\t\t\tvar handler = null;\n\t\t\t//定义回调参数\n\t\t\tvar params = [];\n\t\t\t//获取修饰符\n\t\t\tvar modifier = this.events[eventName].modifier;\n\t\t\tif (!this.events[eventName].handler) {\n\t\t\t\tthrow new TypeError('The value of #' + eventName + ' shoud not be undefined');\n\t\t\t}\n\t\t\t//判断是否有参数\n\t\t\tvar res = /(.*)+\\((.*)\\)/g.exec(this.events[eventName].handler);\n\t\t\t//有参数\n\t\t\tif (res) {\n\t\t\t\t//解析函数\n\t\t\t\thandler = this.parseExpression(scope, res[1]);\n\t\t\t\t//获取参数\n\t\t\t\tif (res[2]) {\n\t\t\t\t\tparams = res[2].split(',').map(function (value) {\n\t\t\t\t\t\treturn _this2.parseExpression(scope, value);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t\t//无参数\n\t\t\telse {\n\t\t\t\t\t//解析函数\n\t\t\t\t\thandler = this.parseExpression(scope, this.events[eventName].handler);\n\t\t\t\t\t//如果解析结果不是函数，则直接作为字符串带过去\n\t\t\t\t\tif (typeof handler != 'function') {\n\t\t\t\t\t\thandler = this.events[eventName].handler;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\treturn {\n\t\t\t\thandler: handler,\n\t\t\t\tparams: params,\n\t\t\t\tmodifier: modifier\n\t\t\t};\n\t\t}\n\n\t\t/**\r\n   * 处理组件渲染\r\n   * @param {State} state state实例\r\n   */\n\n\t}, {\n\t\tkey: 'dealComponent',\n\t\tvalue: function dealComponent(state) {\n\t\t\t//获取组件的名称\n\t\t\tvar name = this.tag.toLocaleLowerCase();\n\t\t\t//如果该组件名称为自定义组件\n\t\t\tif (state.$components[name]) {\n\t\t\t\t//获取自定义属性\n\t\t\t\tvar props = {};\n\t\t\t\tfor (var key in this.attrs) {\n\t\t\t\t\tif (state.$components[name].props.includes(key)) {\n\t\t\t\t\t\tprops[key] = this.attrs[key];\n\t\t\t\t\t\tdelete this.attrs[key];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t//获取自定义组件的注册函数的返回值\n\t\t\t\tvar template = state.$components[name].render.apply(state.$data, [props]);\n\t\t\t\t//如果不返回任何值直接报错\n\t\t\t\tif (!template) {\n\t\t\t\t\tthrow new Error('The template for component \"' + name + '\" is invalid');\n\t\t\t\t}\n\t\t\t\tvar vnode = null;\n\t\t\t\t//如果返回值是字符串，则表示通过模板渲染组件\n\t\t\t\tif (typeof template == 'string') {\n\t\t\t\t\tvar div = document.createElement('div');\n\t\t\t\t\tdiv.innerHTML = template.trim();\n\t\t\t\t\t//只取第一个节点作为组件根元素\n\t\t\t\t\tvar el = div.childNodes[0];\n\t\t\t\t\t//只能创建元素节点\n\t\t\t\t\tif (el.nodeType != 1) {\n\t\t\t\t\t\tthrow new TypeError('The template for component \"' + name + '\" is invalid');\n\t\t\t\t\t}\n\t\t\t\t\t//调用state的_compile方法构建该元素的虚拟节点树\n\t\t\t\t\tvnode = state._compile(this.id, el);\n\t\t\t\t\t//虚拟节点树的for循环处理\n\t\t\t\t\tvnode.dealFor(state);\n\t\t\t\t\t//初始化虚拟节点树\n\t\t\t\t\tvnode.init(state);\n\t\t\t\t}\n\t\t\t\t//如果是对象，则表示通过h函数创建组件\n\t\t\t\telse if ((typeof template === 'undefined' ? 'undefined' : _typeof(template)) == 'object') {\n\t\t\t\t\t\t//创建一个虚拟节点，此时虚拟节点的数据都是初始化后的，无需再次初始化\n\t\t\t\t\t\tvnode = new VNode(template.tag, template.attrs, template.cls, template.directives, template.events, undefined, this.id, 1);\n\t\t\t\t\t\t//创建其子节点\n\t\t\t\t\t\tvnode.createChildrenVnodes(template);\n\t\t\t\t\t\t//设置虚拟节点是否渲染\n\t\t\t\t\t\tvnode.if = template._if;\n\t\t\t\t\t}\n\t\t\t\t//当虚拟节点创建完毕\n\t\t\t\tif (vnode) {\n\t\t\t\t\t//递归进行组件渲染\n\t\t\t\t\tvnode.dealComponent(state);\n\t\t\t\t\t//设置父节点\n\t\t\t\t\tvnode.parent = this.parent;\n\t\t\t\t\t//合并原节点和新建节点的事件集\n\t\t\t\t\tvnode.events = Object.assign(vnode.events, this.events);\n\t\t\t\t\t//合并原节点和新建节点的指令集\n\t\t\t\t\tvnode.directives = Object.assign(vnode.directives, this.directives);\n\t\t\t\t\t//合并原节点和新建节点的样式类集\n\t\t\t\t\tvnode.cls = Object.assign(vnode.cls, this.cls);\n\t\t\t\t\t//合并非自定义属性的属性集\n\t\t\t\t\tvnode.attrs = Object.assign(vnode.attrs, this.attrs);\n\t\t\t\t\t//插入当前节点的位置，并删除当前节点\n\t\t\t\t\tvar index = this.getIndex();\n\t\t\t\t\tthis.parent.children.splice(index, 1, vnode);\n\t\t\t\t}\n\t\t\t}\n\t\t\t//非自定义组件则递归遍历子节点，进行相同的处理\n\t\t\telse {\n\t\t\t\t\tthis.children.forEach(function (childVnode) {\n\t\t\t\t\t\tchildVnode.dealComponent(state);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t}\n\n\t\t/**\r\n   * 根据template对象创建子节点\r\n   * @param {Object} template\r\n   */\n\n\t}, {\n\t\tkey: 'createChildrenVnodes',\n\t\tvalue: function createChildrenVnodes(template) {\n\t\t\tvar _this3 = this;\n\n\t\t\t//text属性明确不存在时，根据slots来创建子节点\n\t\t\tif (template.text === undefined || template.text === null) {\n\t\t\t\ttemplate.slots.forEach(function (slot, i) {\n\t\t\t\t\t//创建一个已经初始化完毕的虚拟节点\n\t\t\t\t\tvar vnode = new VNode(slot.tag, slot.attrs, slot.cls, slot.directives, slot.events, undefined, _this3.id + '_' + i, 1);\n\t\t\t\t\t_this3.children.push(vnode);\n\t\t\t\t\tvnode.createChildrenVnodes(slot);\n\t\t\t\t});\n\t\t\t}\n\t\t\t//根据text创建子节点\n\t\t\telse {\n\t\t\t\t\tvar textNode = document.createTextNode(template.text);\n\t\t\t\t\tvar vnode = new VNode(textNode.nodeName, {}, {}, {}, {}, template.text, this.id + '_0', textNode.nodeType);\n\t\t\t\t\tthis.children = [vnode];\n\t\t\t\t}\n\t\t}\n\n\t\t/**\r\n   * 触发自定义指令的钩子函数(只有旧节点执行)\r\n   * @param {State} state State实例\r\n   * @param {String} hook 钩子名称 \r\n   * @param {Boolean} handlerChildren 是否处理子节点指令，默认为true\r\n   */\n\n\t}, {\n\t\tkey: 'dealDirectives',\n\t\tvalue: function dealDirectives(state, hook) {\n\t\t\tvar handlerChildren = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n\t\t\t//如果该节点为不渲染节点，直接返回\n\t\t\tif (!this.if) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t//该节点非元素节点，直接返回\n\t\t\tif (this.nodeType != 1) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t//设置作用域\n\t\t\tvar scope = Object.assign({}, state.$data);\n\t\t\tObject.assign(scope, this.getForData());\n\t\t\t//遍历指令集合\n\t\t\tfor (var name in this.directives) {\n\t\t\t\t//获取指令的钩子函数集合\n\t\t\t\tvar handler = state.$directives[name];\n\t\t\t\t//回调参数设置\n\t\t\t\tvar data = [];\n\t\t\t\t//获取表达式\n\t\t\t\tvar exp = this.directives[name].exp;\n\t\t\t\t//获取修饰符\n\t\t\t\tvar modifier = this.directives[name].modifier;\n\t\t\t\t//获取值\n\t\t\t\tvar value = this.directives[name].value;\n\t\t\t\t//beforeMount和unmounted钩子函数的回调参数无el元素\n\t\t\t\tif (hook == 'beforeMount' || hook == 'unmounted') {\n\t\t\t\t\t//回调参数为value,modifier,exp,vnode\n\t\t\t\t\tdata = [value, modifier, exp, this];\n\t\t\t\t} else {\n\t\t\t\t\t//回调参数为el,value,modifier,exp,vnode\n\t\t\t\t\tdata = [this.elm, value, modifier, exp, this];\n\t\t\t\t}\n\t\t\t\t//如果该钩子函数存在直接调用\n\t\t\t\tif (handler[hook]) {\n\t\t\t\t\thandler[hook].apply(state.$data, data);\n\t\t\t\t}\n\t\t\t}\n\t\t\t//递归调用进行子节点指令处理\n\t\t\tif (handlerChildren) {\n\t\t\t\tthis.children.forEach(function (childVnode) {\n\t\t\t\t\tchildVnode.dealDirectives(state, hook);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\t/**\r\n   * 生成真实dom(只有旧节点执行)\r\n   * @param {State} state State实例对象\r\n   */\n\n\t}, {\n\t\tkey: 'render',\n\t\tvalue: function render(state) {\n\t\t\tvar _this4 = this;\n\n\t\t\tvar el = null;\n\t\t\t//如果不渲染此节点，则直接创建一个注释节点\n\t\t\tif (!this.if) {\n\t\t\t\tthis.elm = document.createComment('@if');\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// 元素节点\n\t\t\tif (this.nodeType == 1) {\n\t\t\t\t//创建元素\n\t\t\t\tel = document.createElement(this.tag);\n\t\t\t\t//设置样式\n\t\t\t\tvar cls = [];\n\t\t\t\tfor (var item in this.cls) {\n\t\t\t\t\tif (this.cls[item]) {\n\t\t\t\t\t\tcls.push(item);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (cls.length) {\n\t\t\t\t\tel.setAttribute('class', cls.join(' '));\n\t\t\t\t}\n\t\t\t\t//设置属性\n\t\t\t\tfor (var attr in this.attrs) {\n\t\t\t\t\t//获取属性值\n\t\t\t\t\tvar val = this.attrs[attr];\n\t\t\t\t\t//val只要不是false、null、undefined则设置属性\n\t\t\t\t\tif (!(val === false || val === null || val === undefined)) {\n\t\t\t\t\t\t//属性值明确为true时，则直接设置属性而不设置值\n\t\t\t\t\t\tif (val === true) {\n\t\t\t\t\t\t\tval = '';\n\t\t\t\t\t\t}\n\t\t\t\t\t\t//属性值为对象，则转为字符串\n\t\t\t\t\t\tif ((typeof val === 'undefined' ? 'undefined' : _typeof(val)) === 'object') {\n\t\t\t\t\t\t\tval = JSON.stringify(val);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t//其他情况直接转字符串\n\t\t\t\t\t\tval = String(val);\n\t\t\t\t\t\t//设置属性\n\t\t\t\t\t\tel.setAttribute(attr, val);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t//设置事件\n\n\t\t\t\tvar _loop = function _loop(eventName) {\n\t\t\t\t\tel.addEventListener(eventName, function (e) {\n\t\t\t\t\t\t//self修饰符\n\t\t\t\t\t\tif (_this4.events[eventName].modifier && _this4.events[eventName].modifier.includes('self')) {\n\t\t\t\t\t\t\tif (e.currentTarget != e.target) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t//stop修饰符\n\t\t\t\t\t\tif (_this4.events[eventName].modifier && _this4.events[eventName].modifier.includes('stop')) {\n\t\t\t\t\t\t\te.stopPropagation();\n\t\t\t\t\t\t}\n\t\t\t\t\t\t//prevent修饰符\n\t\t\t\t\t\tif (_this4.events[eventName].modifier && _this4.events[eventName].modifier.includes('prevent') && e.cancelable) {\n\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (typeof _this4.events[eventName].handler == 'function') {\n\t\t\t\t\t\t\t//事件回调参数第一个永远固定为event，后面则是定义的参数\n\t\t\t\t\t\t\t_this4.events[eventName].handler.apply(state.$data, [e].concat(_toConsumableArray(_this4.events[eventName].params)));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar h = _this4.executeExpression(state.$data, _this4.events[eventName].handler);\n\t\t\t\t\t\t\th(state.$data);\n\t\t\t\t\t\t}\n\t\t\t\t\t}, {\n\t\t\t\t\t\tonce: _this4.events[eventName].modifier && _this4.events[eventName].modifier.includes('once'),\n\t\t\t\t\t\tcapture: _this4.events[eventName].modifier && _this4.events[eventName].modifier.includes('capture'),\n\t\t\t\t\t\tpassive: _this4.events[eventName].modifier && _this4.events[eventName].modifier.includes('passive')\n\t\t\t\t\t});\n\t\t\t\t};\n\n\t\t\t\tfor (var eventName in this.events) {\n\t\t\t\t\t_loop(eventName);\n\t\t\t\t}\n\t\t\t\t//遍历子节点\n\t\t\t\tthis.children.forEach(function (childVNode) {\n\t\t\t\t\t//对子节点进行render处理\n\t\t\t\t\tchildVNode.render(state);\n\t\t\t\t\t//子节点元素加入父节点\n\t\t\t\t\tel.appendChild(childVNode.elm);\n\t\t\t\t});\n\t\t\t}\n\t\t\t//文本节点\n\t\t\telse if (this.nodeType == 3) {\n\t\t\t\t\tel = document.createTextNode(this.text);\n\t\t\t\t}\n\t\t\t\t//注释节点\n\t\t\t\telse if (this.nodeType == 8) {\n\t\t\t\t\t\tel = document.createComment(this.text);\n\t\t\t\t\t}\n\t\t\tthis.elm = el;\n\t\t}\n\n\t\t/**\r\n   * 判断身为新旧节点的两个节点是否值得比较\r\n   * @param {VNode} oldVNode\r\n   */\n\n\t}, {\n\t\tkey: 'isSame',\n\t\tvalue: function isSame(oldVnode) {\n\t\t\treturn this.tag === oldVnode.tag && this.nodeType === oldVnode.nodeType && this.if === oldVnode.if && this.useIf === oldVnode.useIf && this.useElseIf === oldVnode.useElseIf && this.useElse === oldVnode.useElse;\n\t\t}\n\n\t\t/**\r\n   * 跟旧节点相比，获取指定字段新增、修改和移除的值\r\n   * @param {VNode} oldVnode 旧虚拟节点\r\n   * @param {String} key 指定字段，如attrs\r\n   * @param {Number} type 0表示获取修改的，1表示新增的，2表示获取移除的 \r\n   */\n\n\t}, {\n\t\tkey: 'compare',\n\t\tvalue: function compare(oldVnode, key, type) {\n\t\t\tvar res = {};\n\t\t\tif (type == 0) {\n\t\t\t\tfor (var item in this[key]) {\n\t\t\t\t\tif (oldVnode[key].hasOwnProperty(item) && JSON.stringify(oldVnode[key][item]) !== JSON.stringify(this[key][item])) {\n\t\t\t\t\t\tres[item] = this[key][item];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (type == 1) {\n\t\t\t\tfor (var _item in this[key]) {\n\t\t\t\t\tif (!oldVnode[key].hasOwnProperty(_item)) {\n\t\t\t\t\t\tres[_item] = this[key][_item];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (type == 2) {\n\t\t\t\tfor (var _item2 in oldVnode[key]) {\n\t\t\t\t\t//如果新节点没有\n\t\t\t\t\tif (!this[key].hasOwnProperty(_item2)) {\n\t\t\t\t\t\tres[_item2] = oldVnode[key][_item2];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn res;\n\t\t}\n\n\t\t/**\r\n   * 获取当前节点及父/组件节点的forData\r\n   */\n\n\t}, {\n\t\tkey: 'getForData',\n\t\tvalue: function getForData() {\n\t\t\tvar data = {};\n\t\t\tObject.assign(data, this.forData);\n\t\t\tif (this.parent) {\n\t\t\t\tObject.assign(data, this.parent.getForData());\n\t\t\t}\n\t\t\treturn data;\n\t\t}\n\n\t\t/**\r\n   * 复制该节点(只有新节点执行，且该新节点是已经初始化的节点)\r\n   */\n\n\t}, {\n\t\tkey: 'copy',\n\t\tvalue: function copy() {\n\t\t\tvar id = this.id;\n\t\t\tvar tag = this.tag;\n\t\t\tvar directives = Object.assign({}, this.directives);\n\t\t\tvar attrs = Object.assign({}, this.attrs);\n\t\t\tvar cls = Object.assign({}, this.cls);\n\t\t\tvar events = Object.assign({}, this.events);\n\t\t\tvar text = this.text;\n\t\t\tvar nodeType = this.nodeType;\n\t\t\tvar vnode = new VNode(tag, attrs, cls, directives, events, text, id, nodeType);\n\t\t\tvnode.if = this.if;\n\t\t\tvnode.isCloned = this.isCloned;\n\t\t\tvnode.forData = Object.assign({}, this.forData);\n\t\t\tvnode.useIf = this.useIf;\n\t\t\tvnode.useElseIf = this.useElseIf;\n\t\t\tvnode.useElse = this.useElse;\n\t\t\tvar children = [];\n\t\t\t//遍历子节点进行复制\n\t\t\tvar _iteratorNormalCompletion = true;\n\t\t\tvar _didIteratorError = false;\n\t\t\tvar _iteratorError = undefined;\n\n\t\t\ttry {\n\t\t\t\tfor (var _iterator = this.children[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t\t\t\t\tvar child = _step.value;\n\n\t\t\t\t\tvar newChild = child.copy();\n\t\t\t\t\t//子节点的父节点设为新复制的节点\n\t\t\t\t\tnewChild.parent = vnode;\n\t\t\t\t\tchildren.push(newChild);\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\t_didIteratorError = true;\n\t\t\t\t_iteratorError = err;\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (!_iteratorNormalCompletion && _iterator.return) {\n\t\t\t\t\t\t_iterator.return();\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (_didIteratorError) {\n\t\t\t\t\t\tthrow _iteratorError;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvnode.children = children;\n\t\t\treturn vnode;\n\t\t}\n\n\t\t/**\r\n   * 克隆一个节点(节点尚未初始化)\r\n   * @param {Number} i 节点在父节点中的序列\r\n   * @param {Object} res for循环的数据\r\n   * @param {Number} index for循环克隆时的序列\r\n   * @param {String} key for循环的key\r\n   */\n\n\t}, {\n\t\tkey: 'clone',\n\t\tvalue: function clone(i, res, index, key) {\n\t\t\tvar id = this.id + '_copy_' + i;\n\t\t\tvar tag = this.tag;\n\t\t\tvar directives = Object.assign({}, this.directives);\n\t\t\tfor (var item in directives) {\n\t\t\t\tif (directives[item].value) {\n\t\t\t\t\tdelete directives[item].value;\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar attrs = Object.assign({}, this.attrs);\n\t\t\tvar cls = this.cls;\n\t\t\tvar events = Object.assign({}, this.events);\n\t\t\tvar text = this.text;\n\t\t\tvar nodeType = this.nodeType;\n\t\t\t//创建新节点\n\t\t\tvar vnode = new VNode(tag, attrs, cls, directives, events, text, id, nodeType);\n\t\t\t//设置克隆属性\n\t\t\tvnode.isCloned = true;\n\t\t\t//forData赋值\n\t\t\tif (key) {\n\t\t\t\tvnode.forData[res.item] = res.for[key];\n\t\t\t\tif (res.index) {\n\t\t\t\t\tvnode.forData[res.index] = index;\n\t\t\t\t}\n\t\t\t\tif (res.key) {\n\t\t\t\t\tvnode.forData[res.key] = key;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvnode.forData[res.item] = res.for[index];\n\t\t\t\tif (res.index) {\n\t\t\t\t\tvnode.forData[res.index] = index;\n\t\t\t\t}\n\t\t\t}\n\t\t\t//克隆其子节点\n\t\t\tvar children = [];\n\t\t\tfor (var k in this.children) {\n\t\t\t\tvar newChild = this.children[k].clone(k, res, index, key);\n\t\t\t\tnewChild.parent = vnode;\n\t\t\t\tchildren.push(newChild);\n\t\t\t}\n\t\t\tvnode.children = children;\n\t\t\treturn vnode;\n\t\t}\n\n\t\t/**\r\n   * 判断当前节点与旧节点是否相等(只有新节点执行，且新旧节点都已经初始化)\r\n   * @param {Object} oldVnode\r\n   */\n\n\t}, {\n\t\tkey: 'equal',\n\t\tvalue: function equal(oldVnode) {\n\t\t\tif (this.id != oldVnode.id || this.tag != oldVnode.tag || this.nodeType != oldVnode.nodeType || this.if != oldVnode.if || this.isCloned != oldVnode.isCloned || this.useIf != oldVnode.useIf || this.useElseIf != oldVnode.useElseIf || this.useElse != oldVnode.useElse) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (this.nodeType == 1) {\n\t\t\t\tif (JSON.stringify(this.attrs) != JSON.stringify(oldVnode.attrs)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif (JSON.stringify(this.cls) != JSON.stringify(oldVnode.cls)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif (JSON.stringify(this.directives) != JSON.stringify(oldVnode.directives)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif (JSON.stringify(this.events) != JSON.stringify(oldVnode.events)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif (this.children.length != oldVnode.children.length) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\treturn this.children.every(function (child, index) {\n\t\t\t\t\treturn child.equal(oldVnode.children[index]);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tif (this.text != oldVnode.text) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\n\t\t/**\r\n   * 获取上一个兄弟元素节点\r\n   */\n\n\t}, {\n\t\tkey: 'getPrevBrotherNode',\n\t\tvalue: function getPrevBrotherNode() {\n\t\t\t//获取当前节点在父节点的位置\n\t\t\tvar index = this.getIndex();\n\t\t\tif (index <= 0) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tvar brotherNode = this.parent.children[index - 1];\n\t\t\tif (brotherNode.nodeType != 1) {\n\t\t\t\tbrotherNode = brotherNode.getPrevBrotherNode();\n\t\t\t}\n\t\t\treturn brotherNode;\n\t\t}\n\n\t\t/**\r\n   * 获取虚拟节点在父节点中的序列\r\n   */\n\n\t}, {\n\t\tkey: 'getIndex',\n\t\tvalue: function getIndex() {\n\t\t\tvar index = -1;\n\t\t\tif (this.parent) {\n\t\t\t\tvar length = this.parent.children.length;\n\t\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\t\tif (this.parent.children[i] === this) {\n\t\t\t\t\t\tindex = i;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn index;\n\t\t}\n\n\t\t/**\r\n   * 解析for指令数据\r\n   * @param {Object} scope\r\n   * @param {String} expression\r\n   */\n\n\t}, {\n\t\tkey: 'parseFor',\n\t\tvalue: function parseFor(scope, expression) {\n\t\t\tvar match = expression.match(/([^]*?)\\s+(?:in|of)\\s+([^]*)/);\n\t\t\tif (!match) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar forObj = this.parseExpression(scope, match[2].trim());\n\t\t\tvar alias = match[1].trim().replace(/[\\(\\)]/g, '').trim().split(',');\n\t\t\tvar res = {\n\t\t\t\tfor: forObj,\n\t\t\t\titem: alias[0].trim()\n\t\t\t\t//遍历的是数组\n\t\t\t};if (Array.isArray(forObj)) {\n\t\t\t\tif (alias.length > 1) {\n\t\t\t\t\tres.index = alias[1].trim();\n\t\t\t\t}\n\t\t\t}\n\t\t\t//遍历对象\n\t\t\telse if ((typeof forObj === 'undefined' ? 'undefined' : _typeof(forObj)) == 'object' && forObj) {\n\t\t\t\t\tif (alias.length > 1) {\n\t\t\t\t\t\tres.key = alias[1].trim();\n\t\t\t\t\t}\n\t\t\t\t\tif (alias.length > 2) {\n\t\t\t\t\t\tres.index = alias[2].trim();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\treturn res;\n\t\t}\n\n\t\t/**\r\n   * 解析含{{}}字符串\r\n   * @param {Object} scope\r\n   * @param {String} text\r\n   */\n\n\t}, {\n\t\tkey: 'parseText',\n\t\tvalue: function parseText(scope, text) {\n\t\t\tvar _this5 = this;\n\n\t\t\treturn text.replace(/\\{\\{(.*?)\\}\\}/g, function (match, expression) {\n\t\t\t\tvar res = _this5.parseExpression(scope, expression.trim());\n\t\t\t\tif ((typeof res === 'undefined' ? 'undefined' : _typeof(res)) === 'object') {\n\t\t\t\t\treturn JSON.stringify(res);\n\t\t\t\t}\n\t\t\t\treturn String(res);\n\t\t\t});\n\t\t}\n\n\t\t/**\r\n   * 解析字符串表达式，计算结果\r\n   * @param {Object} scope 作用域对象\r\n   * @param {String} expression 表达式字符串\r\n   */\n\n\t}, {\n\t\tkey: 'parseExpression',\n\t\tvalue: function parseExpression(scope, expression) {\n\t\t\tvar code = '';\n\t\t\t//动态生成变量声明代码\n\t\t\tfor (var key in scope) {\n\t\t\t\tcode += 'let ' + key + ' = scope[\\'' + key + '\\'];';\n\t\t\t}\n\t\t\tcode += 'return ' + expression;\n\t\t\t//在代码块的前后追加代码声明\n\t\t\tvar nf = new Function(\"scope\", code);\n\t\t\t//执行代码块并且返回结果\n\t\t\treturn nf(scope);\n\t\t}\n\n\t\t/**\r\n   * 返回事件指向的表达式字符串封装函数，用于事件值为表达式的情况\r\n   * @param {Object} scope\r\n   * @param {Object} expression\r\n   */\n\n\t}, {\n\t\tkey: 'executeExpression',\n\t\tvalue: function executeExpression(scope, expression) {\n\t\t\tvar code = '';\n\t\t\t//动态生成变量声明代码\n\t\t\tfor (var key in scope) {\n\t\t\t\tcode += 'let ' + key + ' = scope[\\'' + key + '\\'];';\n\t\t\t}\n\t\t\tcode += expression + ';';\n\t\t\tfor (var _key in scope) {\n\t\t\t\tcode += 'scope[\\'' + _key + '\\'] = ' + _key + ';';\n\t\t\t}\n\t\t\t//在代码块的前后追加代码声明\n\t\t\tvar nf = new Function(\"scope\", code);\n\t\t\t//执行代码块并且返回结果\n\t\t\treturn nf;\n\t\t}\n\t}]);\n\n\treturn VNode;\n}();\n\nmodule.exports = VNode;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///0\n")},function(module,exports,__webpack_require__){"use strict";eval("\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar State = __webpack_require__(2);\nvar VNode = __webpack_require__(0);\n\nmodule.exports = {\n\t/**\r\n  * 构建响应式数据对象\r\n  * @param {Object} data\r\n  */\n\tproxy: function proxy(data) {\n\t\tif (!data || (typeof data === 'undefined' ? 'undefined' : _typeof(data)) !== 'object') {\n\t\t\tthrow new TypeError('The argument to \"proxy\" must be an object');\n\t\t}\n\t\treturn new State(data);\n\t},\n\n\t/**\r\n  * 使用响应式数据对象\r\n  * @param {Object} state\r\n  */\n\tuseProxy: function useProxy(state) {\n\t\tif (!(state instanceof State)) {\n\t\t\tthrow new TypeError('The argument to \"useProxy\" must be an instance of State');\n\t\t}\n\t\treturn state.$data;\n\t},\n\n\t/**\r\n  * 返回构建VNode所必须的参数\r\n  * @param {Object} tag\r\n  * @param {Object} options\r\n  */\n\th: function h(tag, options) {\n\t\t//判断tag参数是否为空\n\t\tif (!tag) {\n\t\t\tthrow new TypeError('The tag name is undefined');\n\t\t}\n\t\t//判断tag参数是否为字符串\n\t\tif (typeof tag != 'string') {\n\t\t\tthrow new TypeError('The tag name should be a string');\n\t\t}\n\n\t\t//判断options参数\n\t\tif ((typeof options === 'undefined' ? 'undefined' : _typeof(options)) != 'object' || !options) {\n\t\t\toptions = {};\n\t\t}\n\n\t\t//tag转为小写\n\t\ttag = tag.toLocaleLowerCase();\n\n\t\t//属性参数校验\n\t\tvar attrs = options.attrs || {};\n\n\t\t//样式类校验，支持数组、对象和字符串，最终转为对象\n\t\tvar cls = {};\n\t\tif (Array.isArray(options.cls)) {\n\t\t\toptions.cls.forEach(function (item) {\n\t\t\t\tcls[item] = true;\n\t\t\t});\n\t\t} else if (_typeof(options.cls) == 'object' && options.cls) {\n\t\t\tcls = Object.assign({}, options.cls);\n\t\t} else if (typeof options.cls == 'string' && options.cls) {\n\t\t\tcls[options.cls] = true;\n\t\t} else {\n\t\t\tcls = {};\n\t\t}\n\n\t\t//指令集合，key为指令名称，值为指令参数，包含value和modifier两个数值，如：{ model:{value:333,modifier:'value'} }\n\t\tvar directives = options.directives || {};\n\n\t\t//事件集合，如：{ click:function(){} }\n\t\tvar tmpEvents = options.events || {};\n\t\tvar events = {};\n\t\tfor (var eventName in tmpEvents) {\n\t\t\tevents[eventName] = {\n\t\t\t\thandler: tmpEvents[eventName],\n\t\t\t\tparams: [],\n\t\t\t\tmodifier: undefined\n\t\t\t};\n\t\t}\n\n\t\t//指定创建的元素的文本内容\n\t\tvar text = options.text;\n\n\t\t//子节点数据，每个子节点也可以是h函数返回的数据\n\t\tvar slots = options.slots || [];\n\n\t\t//是否渲染该节点，只有if明确为false时才会不进行渲染\n\t\tvar _if = options.if === false ? false : true;\n\n\t\treturn {\n\t\t\ttag: tag,\n\t\t\tattrs: attrs,\n\t\t\tcls: cls,\n\t\t\tdirectives: directives,\n\t\t\tevents: events,\n\t\t\ttext: text,\n\t\t\tslots: slots,\n\t\t\t_if: _if\n\t\t};\n\t},\n\n\t/**\r\n  * 根据字符串表达式获取真实的值\r\n  * @param {Object} state\r\n  * @param {Object} vnode\r\n  * @param {Object} exp\r\n  */\n\tparse: function parse(state, vnode, exp) {\n\t\tif (!(state instanceof State)) {\n\t\t\tthrow new TypeError('The first argument to \"parse\" must be an instance of State');\n\t\t}\n\t\tif (!(vnode instanceof VNode)) {\n\t\t\tthrow new TypeError('The second argument to \"parse\" must be an instance of VNode');\n\t\t}\n\t\tif (!exp) {\n\t\t\tthrow new TypeError('The string expression does not exist');\n\t\t}\n\t\tif (typeof exp != 'string') {\n\t\t\tthrow new TypeError('The string expression should be a string');\n\t\t}\n\t\t//设置作用域\n\t\tvar scope = Object.assign({}, state.$data);\n\t\tObject.assign(scope, vnode.getForData());\n\t\treturn vnode.parseExpression(scope, exp);\n\t}\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///1\n")},function(module,exports,__webpack_require__){"use strict";eval("\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar VNode = __webpack_require__(0);\nvar customDirectives = __webpack_require__(3);\n/**\r\n * 数据状态管理\r\n */\n\nvar State = function () {\n\tfunction State(data) {\n\t\t_classCallCheck(this, State);\n\n\t\t//响应数据\n\t\tthis.$data = this._toProxy([], data || {});\n\t\t//监听器数组\n\t\tthis.$watchers = {};\n\t\t//挂载相关的虚拟节点\n\t\tthis.$vnode = null;\n\t\t//旧的虚拟节点\n\t\tthis._vnode = null;\n\t\t//保存的初始未渲染元素\n\t\tthis.$template = null;\n\t\t//指令集合\n\t\tthis.$directives = {};\n\t\t//组件集合\n\t\tthis.$components = {};\n\t\t//生命周期钩子函数\n\t\tthis.onBeforeMount = function () {};\n\t\tthis.onMounted = function () {};\n\t\tthis.onBeforeUpdate = function () {};\n\t\tthis.onUpdated = function () {};\n\t\t//初始化操作\n\t\tthis._init();\n\t}\n\n\t/**\r\n  * 初始化的一些处理\r\n  */\n\n\n\t_createClass(State, [{\n\t\tkey: '_init',\n\t\tvalue: function _init() {\n\t\t\t//注册一些指令\n\t\t\tfor (var name in customDirectives) {\n\t\t\t\tthis.directive(name, customDirectives[name]);\n\t\t\t}\n\t\t}\n\n\t\t/**\r\n   * 注册/获取自定义组件\r\n   * @param {Object} name 组件名称\r\n   * @param {Object} handler 组件注册参数\r\n   */\n\n\t}, {\n\t\tkey: 'component',\n\t\tvalue: function component(name, handler) {\n\t\t\t//handler不存在则表示获取自定义组件\n\t\t\tif (!handler) {\n\t\t\t\t//name不存在，表示获取该state的所有自定义组件\n\t\t\t\tif (!name) {\n\t\t\t\t\treturn this.$components;\n\t\t\t\t}\n\t\t\t\t//获取指定名称的自定义组件\n\t\t\t\treturn this.$components[name];\n\t\t\t}\n\n\t\t\t//以下为注册自定义组件的实现\n\n\t\t\t//组件名不存在报错\n\t\t\tif (!name) {\n\t\t\t\tthrow new TypeError('You need to give the component a name');\n\t\t\t}\n\t\t\t//组件重复定义报错\n\t\t\tif (this.$components[name]) {\n\t\t\t\tthrow new Error('The component named \"' + name + '\" is already defined');\n\t\t\t}\n\t\t\tvar props = [];\n\t\t\tvar render = null;\n\t\t\t//组件注册参数为函数\n\t\t\tif (typeof handler == 'function') {\n\t\t\t\trender = handler;\n\t\t\t} else if ((typeof handler === 'undefined' ? 'undefined' : _typeof(handler)) == 'object' && handler) {\n\t\t\t\tprops = handler.props || [];\n\t\t\t\trender = handler.render;\n\t\t\t}\n\t\t\tif (typeof render != 'function') {\n\t\t\t\tthrow new TypeError('The component named \"' + name + '\" need to define a handling method');\n\t\t\t}\n\t\t\t//注册该组件\n\t\t\tthis.$components[name] = {\n\t\t\t\tprops: props,\n\t\t\t\trender: render\n\t\t\t};\n\t\t}\n\n\t\t/**\r\n   * 注册/获取自定义指令\r\n   * @param {String} name 指令名称\r\n   * @param {Object} handler 指令注册参数\r\n   */\n\n\t}, {\n\t\tkey: 'directive',\n\t\tvalue: function directive(name, handler) {\n\t\t\t//handler不存在则表示获取自定义的指令\n\t\t\tif (!handler) {\n\t\t\t\t//name不存在，表示获取该state的所有自定义指令\n\t\t\t\tif (!name) {\n\t\t\t\t\treturn this.$directives;\n\t\t\t\t}\n\t\t\t\t//获取指定名称的自定义组件\n\t\t\t\treturn this.$directives[name];\n\t\t\t}\n\n\t\t\t//以下为注册自定义指令的实现\n\n\t\t\t//指令名称不存在报错\n\t\t\tif (!name) {\n\t\t\t\tthrow new TypeError('You need to give the directive a name');\n\t\t\t}\n\t\t\t//指令重复定义报错\n\t\t\tif (this.$directives[name]) {\n\t\t\t\tthrow new Error('The directive named \"' + name + '\" is already defined');\n\t\t\t}\n\t\t\t//指令钩子函数\n\t\t\tvar beforeMount = function beforeMount() {};\n\t\t\tvar mounted = function mounted() {};\n\t\t\tvar beforeUpdate = function beforeUpdate() {};\n\t\t\tvar updated = function updated() {};\n\t\t\tvar beforeUnmount = function beforeUnmount() {};\n\t\t\tvar unmounted = function unmounted() {};\n\t\t\t//如果指令注册参数是一个函数，表示mounted函数\n\t\t\tif (typeof handler == 'function') {\n\t\t\t\tmounted = handler;\n\t\t\t}\n\t\t\t//如果指令注册参数是一个对象，进行相对的赋值\n\t\t\telse if ((typeof handler === 'undefined' ? 'undefined' : _typeof(handler)) == 'object' && handler) {\n\t\t\t\t\tbeforeMount = handler.beforeMount || function () {};\n\t\t\t\t\tmounted = handler.mounted || function () {};\n\t\t\t\t\tbeforeUpdate = handler.beforeUpdate || function () {};\n\t\t\t\t\tupdated = handler.updated || function () {};\n\t\t\t\t\tbeforeUnmount = handler.beforeUnmount || function () {};\n\t\t\t\t\tunmounted = handler.unmounted || function () {};\n\t\t\t\t}\n\t\t\t//注册指令\n\t\t\tthis.$directives[name] = {\n\t\t\t\tbeforeMount: beforeMount,\n\t\t\t\tmounted: mounted,\n\t\t\t\tbeforeUpdate: beforeUpdate,\n\t\t\t\tupdated: updated,\n\t\t\t\tbeforeUnmount: beforeUnmount,\n\t\t\t\tunmounted: unmounted\n\t\t\t};\n\t\t}\n\n\t\t//----------------------------------------------------------------------\n\t\t//以下方法是实现vnode相关的\n\t\t//----------------------------------------------------------------------\n\n\t\t/**\r\n   * 实现挂载\r\n   * @param {Element} el 挂载元素\r\n   */\n\n\t}, {\n\t\tkey: 'mount',\n\t\tvalue: function mount(el) {\n\t\t\t//beforeMount生命周期函数触发\n\t\t\tif (typeof this.onBeforeMount == 'function') {\n\t\t\t\tthis.onBeforeMount.apply(this.$data);\n\t\t\t}\n\t\t\t//校验参数\n\t\t\tif (!el) {\n\t\t\t\tthrow new Error('You must specify an element to mount');\n\t\t\t}\n\t\t\tif (typeof el == 'string') {\n\t\t\t\tel = document.body.querySelector(el);\n\t\t\t}\n\t\t\tif (!(el instanceof Node && el.nodeType === 1)) {\n\t\t\t\tthrow new TypeError('The mount element is undefined');\n\t\t\t}\n\t\t\t//保存最早的el元素\n\t\t\tthis.$template = el.cloneNode(true);\n\t\t\t//生成未初始化的虚拟节点\n\t\t\tthis.$vnode = this._compile('vnode', el);\n\t\t\t//处理for指令进行节点克隆\n\t\t\tthis.$vnode.dealFor(this);\n\t\t\t//初始化虚拟节点，进行数据绑定赋值\n\t\t\tthis.$vnode.init(this);\n\t\t\t//处理自定义组件的渲染\n\t\t\tthis.$vnode.dealComponent(this);\n\t\t\t//保存到旧节点树\n\t\t\tthis._vnode = this.$vnode.copy();\n\t\t\t//触发自定义指令的beforeMount钩子函数\n\t\t\tthis._vnode.dealDirectives(this, 'beforeMount');\n\t\t\t//进行dom渲染，生成新的dom\n\t\t\tthis._vnode.render(this);\n\t\t\t//将新的dom插入同时删除旧的dom\n\t\t\tel.parentNode.insertBefore(this._vnode.elm, el);\n\t\t\tel.remove();\n\t\t\t//触发自定义指令的mounted\n\t\t\tthis._vnode.dealDirectives(this, 'mounted');\n\t\t\t//mounted生命周期函数触发\n\t\t\tif (typeof this.onMounted == 'function') {\n\t\t\t\tthis.onMounted.apply(this.$data);\n\t\t\t}\n\t\t\t//返回state对象\n\t\t\treturn this;\n\t\t}\n\n\t\t/**\r\n   * 将一个指定的元素及其子孙节点构造成一个虚拟dom树(此时虚拟dom未初始化数据)\r\n   * @param {String} id id\r\n   * @param {Node} el 目标元素\r\n   */\n\n\t}, {\n\t\tkey: '_compile',\n\t\tvalue: function _compile(id, el) {\n\t\t\tvar vnode = null;\n\t\t\t//元素节点\n\t\t\tif (el.nodeType == 1) {\n\t\t\t\t//定义属性的集合\n\t\t\t\tvar attrs = {};\n\t\t\t\t//定义指令的集合\n\t\t\t\tvar directives = {};\n\t\t\t\t//定义事件的集合\n\t\t\t\tvar events = {};\n\t\t\t\t//定义样式类字段\n\t\t\t\tvar cls = '';\n\t\t\t\t//遍历该元素的所有属性\n\t\t\t\tvar _iteratorNormalCompletion = true;\n\t\t\t\tvar _didIteratorError = false;\n\t\t\t\tvar _iteratorError = undefined;\n\n\t\t\t\ttry {\n\t\t\t\t\tfor (var _iterator = el.attributes[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t\t\t\t\t\tvar item = _step.value;\n\n\t\t\t\t\t\t//@开头解析为指令\n\t\t\t\t\t\tif (item.nodeName.startsWith('@')) {\n\t\t\t\t\t\t\t//查找修饰符的位置\n\t\t\t\t\t\t\tvar index = item.nodeName.indexOf(':');\n\t\t\t\t\t\t\t//存在修饰符\n\t\t\t\t\t\t\tif (index > 0) {\n\t\t\t\t\t\t\t\t//指令名称\n\t\t\t\t\t\t\t\tvar directiveName = item.nodeName.substr(1, index - 1);\n\t\t\t\t\t\t\t\t//修饰符字段\n\t\t\t\t\t\t\t\tvar modifier = item.nodeName.substr(index + 1);\n\t\t\t\t\t\t\t\t//加入指令集合\n\t\t\t\t\t\t\t\tif (directiveName) {\n\t\t\t\t\t\t\t\t\tdirectives[directiveName] = {\n\t\t\t\t\t\t\t\t\t\tmodifier: modifier || undefined,\n\t\t\t\t\t\t\t\t\t\texp: item.nodeValue\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t//不存在修饰符\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\t//指令名称\n\t\t\t\t\t\t\t\t\tvar _directiveName = item.nodeName.substr(1);\n\t\t\t\t\t\t\t\t\tif (_directiveName) {\n\t\t\t\t\t\t\t\t\t\t//加入指令集合\n\t\t\t\t\t\t\t\t\t\tdirectives[_directiveName] = {\n\t\t\t\t\t\t\t\t\t\t\tmodifier: undefined,\n\t\t\t\t\t\t\t\t\t\t\texp: item.nodeValue\n\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t//#开头解析为事件\n\t\t\t\t\t\telse if (item.nodeName.startsWith('#')) {\n\t\t\t\t\t\t\t\t//事件解析，可能存在修饰符\n\t\t\t\t\t\t\t\tvar res = item.nodeName.substr(1).split('.');\n\t\t\t\t\t\t\t\t//获取事件名称\n\t\t\t\t\t\t\t\tvar eventName = res[0];\n\t\t\t\t\t\t\t\t//加入事件集合\n\t\t\t\t\t\t\t\tevents[eventName] = {\n\t\t\t\t\t\t\t\t\thandler: item.nodeValue,\n\t\t\t\t\t\t\t\t\tmodifier: res.filter(function (item, index) {\n\t\t\t\t\t\t\t\t\t\treturn index > 0;\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t//样式class单独提取出来\n\t\t\t\t\t\t\telse if (item.nodeName == 'class') {\n\t\t\t\t\t\t\t\t\tcls = item.nodeValue.trim();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t//普通属性，忽略refx-cloak属性\n\t\t\t\t\t\t\t\telse if (item.nodeName != 'refex-cloak') {\n\t\t\t\t\t\t\t\t\t\tattrs[item.nodeName] = item.nodeValue;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t//创建虚拟节点\n\t\t\t\t} catch (err) {\n\t\t\t\t\t_didIteratorError = true;\n\t\t\t\t\t_iteratorError = err;\n\t\t\t\t} finally {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!_iteratorNormalCompletion && _iterator.return) {\n\t\t\t\t\t\t\t_iterator.return();\n\t\t\t\t\t\t}\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tif (_didIteratorError) {\n\t\t\t\t\t\t\tthrow _iteratorError;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvnode = new VNode(el.nodeName.toLocaleLowerCase(), attrs, cls, directives, events, undefined, id, el.nodeType);\n\t\t\t\t//获取目标元素子节点\n\t\t\t\tvar nodes = el.childNodes;\n\t\t\t\t//子节点长度\n\t\t\t\tvar length = nodes.length;\n\t\t\t\t//遍历子节点\n\t\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\t\t//递归调用本方法进行子节点的创建\n\t\t\t\t\tvar vn = this._compile(id + '_' + i, nodes[i]);\n\t\t\t\t\t//如果创建成功\n\t\t\t\t\tif (vn) {\n\t\t\t\t\t\t//设置父节点\n\t\t\t\t\t\tvn.parent = vnode;\n\t\t\t\t\t\t//加入到父节点下\n\t\t\t\t\t\tvnode.children.push(vn);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t//文本节点或者注释节点\n\t\t\telse if (el.nodeType == 3 || el.nodeType == 8) {\n\t\t\t\t\t//直接创建\n\t\t\t\t\tvnode = new VNode(el.nodeName.toLocaleLowerCase(), {}, '', {}, {}, el.nodeValue, id, el.nodeType);\n\t\t\t\t}\n\t\t\treturn vnode;\n\t\t}\n\n\t\t/**\r\n   * 更新虚拟节点\r\n   * @param {Array} key\r\n   * @param {Object} newValue\r\n   * @param {Object} oldValue\r\n   */\n\n\t}, {\n\t\tkey: '_updateVnodes',\n\t\tvalue: function _updateVnodes(key, newValue, oldValue) {\n\t\t\t//更新虚拟节点树\n\t\t\tthis.$vnode = this._compile('vnode', this.$template);\n\t\t\t//处理for指令进行节点克隆\n\t\t\tthis.$vnode.dealFor(this);\n\t\t\t//初始化节点树\n\t\t\tthis.$vnode.init(this);\n\t\t\t//处理自定义组件的渲染\n\t\t\tthis.$vnode.dealComponent(this);\n\t\t\t//新旧根节点比较\n\t\t\tthis._updateVnode(this.$vnode, this._vnode);\n\t\t}\n\n\t\t/**\r\n   * 比较节点进行更新\r\n   * @param {VNode} newVnode\r\n   * @param {VNode} oldVnode\r\n   */\n\n\t}, {\n\t\tkey: '_updateVnode',\n\t\tvalue: function _updateVnode(newVnode, oldVnode) {\n\t\t\t//如果这两个节点值得比较\n\t\t\tif (newVnode.isSame(oldVnode)) {\n\t\t\t\t//节点是否更新\n\t\t\t\tvar isUpdate = !newVnode.equal(oldVnode);\n\t\t\t\t//如果节点更新，先触发指令的beforeUpdate钩子函数\n\t\t\t\tif (isUpdate) {\n\t\t\t\t\toldVnode.dealDirectives(this, 'beforeUpdate', false);\n\t\t\t\t}\n\t\t\t\t//元素节点\n\t\t\t\tif (newVnode.nodeType == 1 && oldVnode.if) {\n\t\t\t\t\t//更新指令\n\t\t\t\t\tthis._updateDirectives(newVnode, oldVnode);\n\t\t\t\t\t//更新属性\n\t\t\t\t\tthis._updateAttrs(newVnode, oldVnode);\n\t\t\t\t\t//更新样式类\n\t\t\t\t\tthis._updateClass(newVnode, oldVnode);\n\t\t\t\t\t//更新事件\n\t\t\t\t\tthis._updateEvents(newVnode, oldVnode);\n\t\t\t\t\t//子节点进行比较\n\t\t\t\t\tthis._updateChildren(newVnode, oldVnode);\n\t\t\t\t}\n\t\t\t\t//文本节点\n\t\t\t\telse if (newVnode.nodeType == 3) {\n\t\t\t\t\t\t//更新节点文字\n\t\t\t\t\t\tthis._updateText(newVnode, oldVnode);\n\t\t\t\t\t}\n\t\t\t\t//节点更新，触发指令的updated钩子函数\n\t\t\t\tif (isUpdate) {\n\t\t\t\t\toldVnode.dealDirectives(this, 'updated', false);\n\t\t\t\t}\n\t\t\t}\n\t\t\t//直接替换\n\t\t\telse {\n\t\t\t\t\t//复制新节点\n\t\t\t\t\tvar vnode = newVnode.copy();\n\t\t\t\t\t//获取父节点\n\t\t\t\t\tvar parent = oldVnode.parent;\n\t\t\t\t\t//更新插入的节点的父节点\n\t\t\t\t\tvnode.parent = parent;\n\t\t\t\t\t//触发自定义指令的beforeUnmount\n\t\t\t\t\toldVnode.dealDirectives(this, 'beforeUnmount');\n\t\t\t\t\t//获取旧节点在父节点中的序列\n\t\t\t\t\tvar index = oldVnode.getIndex();\n\t\t\t\t\t//删除原来的旧节点，在原来的位置上插入新建的节点\n\t\t\t\t\tparent.children.splice(index, 1, vnode);\n\t\t\t\t\t//触发自定义指令的beforeMount\n\t\t\t\t\tvnode.dealDirectives(this, 'beforeMount');\n\t\t\t\t\t//渲染该节点\n\t\t\t\t\tvnode.render(this);\n\t\t\t\t\t//将节点元素插入原来的位置\n\t\t\t\t\toldVnode.elm.parentNode.insertBefore(vnode.elm, oldVnode.elm);\n\t\t\t\t\t//删除原来的dom元素\n\t\t\t\t\toldVnode.elm.remove();\n\t\t\t\t\t//触发自定义指令的unmounted\n\t\t\t\t\toldVnode.dealDirectives(this, 'unmounted');\n\t\t\t\t\t//触发自定义指令的mounted\n\t\t\t\t\tvnode.dealDirectives(this, 'mounted');\n\t\t\t\t}\n\t\t}\n\n\t\t/**\r\n   * 更新指令\r\n   * @param {VNode} newVnode\r\n   * @param {VNode} oldVnode\r\n   */\n\n\t}, {\n\t\tkey: '_updateDirectives',\n\t\tvalue: function _updateDirectives(newVnode, oldVnode) {\n\t\t\t//获取新增或者修改的指令\n\t\t\tvar a = newVnode.compare(oldVnode, 'directives', 0);\n\t\t\tvar b = newVnode.compare(oldVnode, 'directives', 1);\n\t\t\tvar updateDirectives = Object.assign(a, b);\n\t\t\t//进行更新操作\n\t\t\tfor (var d in updateDirectives) {\n\t\t\t\toldVnode.directives[d] = Object.assign({}, updateDirectives[d]);\n\t\t\t}\n\t\t\t//获取移除的指令\n\t\t\tvar removeDirectives = newVnode.compare(oldVnode, 'directives', 2);\n\t\t\t//进行移除操作\n\t\t\tfor (var _d in removeDirectives) {\n\t\t\t\tdelete oldVnode.directives[_d];\n\t\t\t}\n\t\t}\n\n\t\t/**\r\n   * 更新属性\r\n   * @param {VNode} newVnode\r\n   * @param {VNode} oldVnode\r\n   */\n\n\t}, {\n\t\tkey: '_updateAttrs',\n\t\tvalue: function _updateAttrs(newVnode, oldVnode) {\n\t\t\t//获取新增或者修改的属性\n\t\t\tvar a = newVnode.compare(oldVnode, 'attrs', 0);\n\t\t\tvar b = newVnode.compare(oldVnode, 'attrs', 1);\n\t\t\tvar updateAttrs = Object.assign(a, b);\n\t\t\t//进行更新操作\n\t\t\tfor (var attr in updateAttrs) {\n\t\t\t\tvar val = updateAttrs[attr];\n\t\t\t\toldVnode.attrs[attr] = val;\n\t\t\t\t//val是false、null、undefined则移除属性\n\t\t\t\tif (val === false || val === null || val === undefined) {\n\t\t\t\t\toldVnode.elm.removeAttribute(attr);\n\t\t\t\t}\n\t\t\t\t//否则设置属性值\n\t\t\t\telse {\n\t\t\t\t\t\t//属性值明确为true时，则直接设置属性而不设置值\n\t\t\t\t\t\tif (val === true) {\n\t\t\t\t\t\t\tval = '';\n\t\t\t\t\t\t}\n\t\t\t\t\t\t//属性值为对象，则转为字符串\n\t\t\t\t\t\tif ((typeof val === 'undefined' ? 'undefined' : _typeof(val)) === 'object') {\n\t\t\t\t\t\t\tval = JSON.stringify(val);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t//其他情况直接转字符串\n\t\t\t\t\t\tval = String(val);\n\t\t\t\t\t\t//设置属性\n\t\t\t\t\t\toldVnode.elm.setAttribute(attr, val);\n\t\t\t\t\t}\n\t\t\t}\n\t\t\t//获取移除的属性\n\t\t\tvar removeAttrs = newVnode.compare(oldVnode, 'attrs', 2);\n\t\t\t//进行移除操作\n\t\t\tfor (var _attr in removeAttrs) {\n\t\t\t\tdelete oldVnode.attrs[_attr];\n\t\t\t\toldVnode.elm.removeAttribute(_attr);\n\t\t\t}\n\t\t}\n\n\t\t/**\r\n   * 更新样式类\r\n   * @param {VNode} newVnode\r\n   * @param {VNode} oldVnode\r\n   */\n\n\t}, {\n\t\tkey: '_updateClass',\n\t\tvalue: function _updateClass(newVnode, oldVnode) {\n\t\t\t//样式发生了变化\n\t\t\tif (JSON.stringify(newVnode.cls) != JSON.stringify(oldVnode.cls)) {\n\t\t\t\toldVnode.cls = Object.assign({}, newVnode.cls);\n\t\t\t\tvar cls = [];\n\t\t\t\tfor (var item in oldVnode.cls) {\n\t\t\t\t\tif (oldVnode.cls[item]) {\n\t\t\t\t\t\tcls.push(item);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (cls.length) {\n\t\t\t\t\toldVnode.elm.setAttribute('class', cls.join(' '));\n\t\t\t\t} else {\n\t\t\t\t\toldVnode.elm.removeAttribute('class');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\r\n   * 更新事件\r\n   * @param {VNode} newVnode\r\n   * @param {VNode} oldVnode\r\n   */\n\n\t}, {\n\t\tkey: '_updateEvents',\n\t\tvalue: function _updateEvents(newVnode, oldVnode) {\n\t\t\tvar _this = this;\n\n\t\t\t//获取修改的事件\n\t\t\tvar updateEvents = newVnode.compare(oldVnode, 'events', 0);\n\t\t\tfor (var eventName in updateEvents) {\n\t\t\t\toldVnode.events[eventName] = updateEvents[eventName];\n\t\t\t}\n\t\t\t//获取新增的事件\n\t\t\tvar addEvents = newVnode.compare(oldVnode, 'events', 1);\n\n\t\t\tvar _loop = function _loop(_eventName) {\n\t\t\t\toldVnode.events[_eventName] = addEvents[_eventName];\n\t\t\t\toldVnode.elm.addEventListener(_eventName, function (e) {\n\t\t\t\t\t//self修饰符\n\t\t\t\t\tif (oldVnode.events[_eventName].modifier && oldVnode.events[_eventName].modifier.includes('self')) {\n\t\t\t\t\t\tif (e.currentTarget != e.target) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t//stop修饰符\n\t\t\t\t\tif (oldVnode.events[_eventName].modifier && oldVnode.events[_eventName].modifier.includes('stop')) {\n\t\t\t\t\t\te.stopPropagation();\n\t\t\t\t\t}\n\t\t\t\t\t//prevent修饰符\n\t\t\t\t\tif (oldVnode.events[_eventName].modifier && oldVnode.events[_eventName].modifier.includes('prevent') && e.cancelable) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t\t//执行事件函数\n\t\t\t\t\tif (typeof oldVnode.events[_eventName].handler == 'function') {\n\t\t\t\t\t\t//事件回调参数第一个永远固定为event，后面则是定义的参数\n\t\t\t\t\t\toldVnode.events[_eventName].handler.apply(_this.$data, [e].concat(_toConsumableArray(oldVnode.events[_eventName].params)));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar h = oldVnode.executeExpression(_this.$data, oldVnode.events[_eventName].handler);\n\t\t\t\t\t\th(_this.$data);\n\t\t\t\t\t}\n\t\t\t\t}, {\n\t\t\t\t\tonce: oldVnode.events[_eventName].modifier && oldVnode.events[_eventName].modifier.includes('once'),\n\t\t\t\t\tcapture: oldVnode.events[_eventName].modifier && oldVnode.events[_eventName].modifier.includes('capture'),\n\t\t\t\t\tpassive: oldVnode.events[_eventName].modifier && oldVnode.events[_eventName].modifier.includes('passive')\n\t\t\t\t});\n\t\t\t};\n\n\t\t\tfor (var _eventName in addEvents) {\n\t\t\t\t_loop(_eventName);\n\t\t\t}\n\t\t}\n\n\t\t/**\r\n   * 更新子节点\r\n   * @param {VNode} newVnode\r\n   * @param {VNode} oldVnode\r\n   */\n\n\t}, {\n\t\tkey: '_updateChildren',\n\t\tvalue: function _updateChildren(newVnode, oldVnode) {\n\t\t\tvar _this2 = this;\n\n\t\t\t//子节点数目一致\n\t\t\tif (newVnode.children.length == oldVnode.children.length) {\n\t\t\t\t//递归比较子节点\n\t\t\t\tvar _iteratorNormalCompletion2 = true;\n\t\t\t\tvar _didIteratorError2 = false;\n\t\t\t\tvar _iteratorError2 = undefined;\n\n\t\t\t\ttry {\n\t\t\t\t\tfor (var _iterator2 = newVnode.children[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t\t\t\t\t\tvar nchild = _step2.value;\n\t\t\t\t\t\tvar _iteratorNormalCompletion3 = true;\n\t\t\t\t\t\tvar _didIteratorError3 = false;\n\t\t\t\t\t\tvar _iteratorError3 = undefined;\n\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tfor (var _iterator3 = oldVnode.children[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n\t\t\t\t\t\t\t\tvar ochild = _step3.value;\n\n\t\t\t\t\t\t\t\t//新旧节点树中只有同等id的节点才会被比较\n\t\t\t\t\t\t\t\tif (nchild.id === ochild.id) {\n\t\t\t\t\t\t\t\t\tthis._updateVnode(nchild, ochild);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\t_didIteratorError3 = true;\n\t\t\t\t\t\t\t_iteratorError3 = err;\n\t\t\t\t\t\t} finally {\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tif (!_iteratorNormalCompletion3 && _iterator3.return) {\n\t\t\t\t\t\t\t\t\t_iterator3.return();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} finally {\n\t\t\t\t\t\t\t\tif (_didIteratorError3) {\n\t\t\t\t\t\t\t\t\tthrow _iteratorError3;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} catch (err) {\n\t\t\t\t\t_didIteratorError2 = true;\n\t\t\t\t\t_iteratorError2 = err;\n\t\t\t\t} finally {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t\t\t\t\t\t\t_iterator2.return();\n\t\t\t\t\t\t}\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tif (_didIteratorError2) {\n\t\t\t\t\t\t\tthrow _iteratorError2;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t//子节点数目不一致，直接更新子节点数组，并且更新dom\n\t\t\telse {\n\t\t\t\t\toldVnode.children.forEach(function (childVnode) {\n\t\t\t\t\t\t//触发自定义指令的beforeMount\n\t\t\t\t\t\tchildVnode.dealDirectives(_this2, 'beforeUnmount');\n\t\t\t\t\t});\n\t\t\t\t\toldVnode.elm.innerHTML = '';\n\t\t\t\t\toldVnode.children.forEach(function (childVnode) {\n\t\t\t\t\t\t//触发自定义指令的unmounted\n\t\t\t\t\t\tchildVnode.dealDirectives(_this2, 'unmounted');\n\t\t\t\t\t});\n\t\t\t\t\toldVnode.children = [];\n\t\t\t\t\tnewVnode.children.forEach(function (childVnode) {\n\t\t\t\t\t\tvar copyChild = childVnode.copy();\n\t\t\t\t\t\toldVnode.children.push(copyChild);\n\t\t\t\t\t\t//触发自定义指令的beforeMount\n\t\t\t\t\t\tcopyChild.dealDirectives(_this2, 'beforeMount');\n\t\t\t\t\t\tcopyChild.render(_this2);\n\t\t\t\t\t\t//插入元素\n\t\t\t\t\t\toldVnode.elm.appendChild(copyChild.elm);\n\t\t\t\t\t\t//触发自定义指令的mounted\n\t\t\t\t\t\tcopyChild.dealDirectives(_this2, 'mounted');\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t}\n\n\t\t/**\r\n   * 更新文字\r\n   * @param {VNode} newVnode\r\n   * @param {VNode} oldVnode\r\n   */\n\n\t}, {\n\t\tkey: '_updateText',\n\t\tvalue: function _updateText(newVnode, oldVnode) {\n\t\t\tif (newVnode.text !== oldVnode.text) {\n\t\t\t\toldVnode.text = newVnode.text;\n\t\t\t\toldVnode.elm.nodeValue = oldVnode.text;\n\t\t\t}\n\t\t}\n\n\t\t//----------------------------------------------------------------------\n\t\t//以下方法是实现数据代理和变更监听的\n\t\t//----------------------------------------------------------------------\n\n\t\t/**\r\n   * 对外提供的进行监听的方法\r\n   * @param {String} property 监听属性\r\n   * @param {Function} handler 监听函数\r\n   */\n\n\t}, {\n\t\tkey: 'watch',\n\t\tvalue: function watch(property, handler) {\n\t\t\t//监听的属性未定义报错\n\t\t\tif (!property) {\n\t\t\t\tthrow new TypeError('You must specify a property to watch');\n\t\t\t}\n\t\t\t//监听的属性不是字符串\n\t\t\tif (typeof property != 'string') {\n\t\t\t\tthrow new TypeError('The watch property expected a string');\n\t\t\t}\n\t\t\t//如果监听函数非函数类型默认为空函数\n\t\t\tif (typeof handler != 'function') {\n\t\t\t\thandler = function handler() {};\n\t\t\t}\n\t\t\t//将监听属性字符串解析成特定形式的新字符串作为key\n\t\t\tvar key = this._parseProperty(property);\n\t\t\t//特定属性的监听已存在\n\t\t\tif (this.$watchers[key]) {\n\t\t\t\tthrow new Error('The watcher for \"' + property + '\" is already defined');\n\t\t\t}\n\t\t\t//注册该监听\n\t\t\tthis.$watchers[key] = handler;\n\t\t\t//返回该实例\n\t\t\treturn this;\n\t\t}\n\n\t\t/**\r\n   * 解除监听\r\n   * @param {String} property 监听的属性\r\n   */\n\n\t}, {\n\t\tkey: 'unwatch',\n\t\tvalue: function unwatch(property) {\n\t\t\t//解除该属性监听\n\t\t\tif (typeof property == 'string') {\n\t\t\t\t//将监听属性字符串解析生成点间隔符的新字符串作为存储监听器的key\n\t\t\t\tvar key = this._parseProperty(property);\n\t\t\t\t//如果存在该key的监听器则进行移除\n\t\t\t\tif (this.$watchers[key]) {\n\t\t\t\t\tdelete this.$watchers[key];\n\t\t\t\t}\n\t\t\t}\n\t\t\t//解除全部监听\n\t\t\telse {\n\t\t\t\t\tthis.$watchers = {};\n\t\t\t\t}\n\t\t\t//返回该实例\n\t\t\treturn this;\n\t\t}\n\n\t\t/**\r\n   * 将普通对象转为proxy对象\r\n   * @param {Array} parentKeys 值为对象的元素上级父属性数组\r\n   * @param {Object} data 源数据对象\r\n   * @param {String} parentKey 值为对象的元素属性名称\r\n   */\n\n\t}, {\n\t\tkey: '_toProxy',\n\t\tvalue: function _toProxy(parentKeys, data, parentKey) {\n\t\t\tvar _this3 = this;\n\n\t\t\tvar keys = [].concat(_toConsumableArray(parentKeys));\n\t\t\tif (!this._isObject(data)) {\n\t\t\t\tthrow new TypeError('Cannot create proxy with a non-object as target or handler');\n\t\t\t}\n\t\t\tif (parentKey) {\n\t\t\t\tkeys.push(parentKey);\n\t\t\t}\n\t\t\t//遍历data的属性\n\t\t\tfor (var key in data) {\n\t\t\t\t//属性值为对象的则再次转为proxy对象\n\t\t\t\tif (this._isObject(data[key])) {\n\t\t\t\t\tdata[key] = this._toProxy(keys, data[key], key);\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar handler = {\n\t\t\t\tget: function get(target, property) {\n\t\t\t\t\treturn _this3._getter(keys, target, property);\n\t\t\t\t},\n\t\t\t\tset: function set(target, property, value) {\n\t\t\t\t\treturn _this3._setter(keys, target, property, value);\n\t\t\t\t},\n\t\t\t\tdeleteProperty: function deleteProperty(target, property) {\n\t\t\t\t\treturn _this3._setter(keys, target, property, undefined);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn new Proxy(data, handler);\n\t\t}\n\n\t\t/**\r\n   * 获取属性值监听\r\n   * @param {Array} parentKeys 父属性数组\r\n   * @param {Object} target  目标对象\r\n   * @param {String} property 目标对象的属性\r\n   */\n\n\t}, {\n\t\tkey: '_getter',\n\t\tvalue: function _getter(parentKeys, target, property) {\n\t\t\treturn Reflect.get(target, property);\n\t\t}\n\n\t\t/**\r\n   * 设置属性值监听\r\n   * @param {Array} parentKeys 父属性数组\r\n   * @param {Object} target 目标对象\r\n   * @param {String} property 属性\r\n   * @param {Object} value  属性值\r\n   */\n\n\t}, {\n\t\tkey: '_setter',\n\t\tvalue: function _setter(parentKeys, target, property, value) {\n\t\t\t//父属性数组更新\n\t\t\tvar keys = [].concat(_toConsumableArray(parentKeys));\n\t\t\tkeys.push(property);\n\t\t\t//记录旧的target\n\t\t\tvar oldTarget = null;\n\t\t\tif (Array.isArray(target)) {\n\t\t\t\toldTarget = [].concat(_toConsumableArray(target));\n\t\t\t} else if ((typeof target === 'undefined' ? 'undefined' : _typeof(target)) == 'object') {\n\t\t\t\toldTarget = Object.assign({}, target);\n\t\t\t}\n\t\t\t//记录旧的value\n\t\t\tvar oldValue = target[property];\n\t\t\tif (Array.isArray(oldValue)) {\n\t\t\t\toldValue = [].concat(_toConsumableArray(oldValue));\n\t\t\t} else if ((typeof oldValue === 'undefined' ? 'undefined' : _typeof(oldValue)) == 'object' && oldValue) {\n\t\t\t\toldValue = Object.assign({}, oldValue);\n\t\t\t}\n\t\t\t//设置值\n\t\t\tReflect.set(target, property, value);\n\t\t\t//如果属性变化\n\t\t\tif (oldValue !== value) {\n\t\t\t\t//触发beforeUpdate生命周期函数\n\t\t\t\tif (typeof this.onBeforeUpdate == 'function') {\n\t\t\t\t\tthis.onBeforeUpdate.apply(this.$data, [property, value, oldValue, target]);\n\t\t\t\t}\n\t\t\t\t//更新虚拟节点\n\t\t\t\tthis._updateVnodes(keys, value, oldValue);\n\t\t\t\t//针对修改对象或者数组内部元素，触发对数组或者对象的监听\n\t\t\t\tvar key1 = parentKeys.join('.');\n\t\t\t\tif (oldTarget && parentKeys.length && this.$watchers[key1]) {\n\t\t\t\t\tthis.$watchers[key1].apply(this, [target, oldTarget]);\n\t\t\t\t}\n\t\t\t\t//针对直接属性触发监听\n\t\t\t\tvar key2 = keys.join('.');\n\t\t\t\tif (this.$watchers[key2]) {\n\t\t\t\t\tthis.$watchers[key2].apply(this, [value, oldValue]);\n\t\t\t\t}\n\t\t\t\t//触发updated生命周期函数\n\t\t\t\tif (typeof this.onUpdated == 'function') {\n\t\t\t\t\tthis.onUpdated.apply(this.$data, [property, value, oldValue, target]);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\n\t\t/**\r\n   * 解析指定的监听属性字符串为特定格式字符串\r\n   * @param {String} property 解析的属性字符串\r\n   */\n\n\t}, {\n\t\tkey: '_parseProperty',\n\t\tvalue: function _parseProperty(property) {\n\t\t\tvar properties = [];\n\t\t\tproperty.split('.').forEach(function (prop) {\n\t\t\t\tvar matchArray = prop.match(/\\[(.+?)\\]/g);\n\t\t\t\tif (matchArray) {\n\t\t\t\t\tvar newProp = prop.replace(/\\[(.+?)\\]/g, '');\n\t\t\t\t\tproperties.push(newProp);\n\t\t\t\t\tmatchArray.forEach(function (match) {\n\t\t\t\t\t\tproperties.push(match.substr(1, match.length - 2));\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tproperties.push(prop);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn properties.join('.');\n\t\t}\n\n\t\t/**\r\n   * 判断数据是否为对象\r\n   * @param {Object} data\r\n   */\n\n\t}, {\n\t\tkey: '_isObject',\n\t\tvalue: function _isObject(data) {\n\t\t\tif ((typeof data === 'undefined' ? 'undefined' : _typeof(data)) == 'object' && data) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t}]);\n\n\treturn State;\n}();\n\nmodule.exports = State;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9SZWZleC8uL3NyYy9zdGF0ZS5qcz9mYWFlIl0sIm5hbWVzIjpbIlZOb2RlIiwicmVxdWlyZSIsImN1c3RvbURpcmVjdGl2ZXMiLCJTdGF0ZSIsImRhdGEiLCIkZGF0YSIsIl90b1Byb3h5IiwiJHdhdGNoZXJzIiwiJHZub2RlIiwiX3Zub2RlIiwiJHRlbXBsYXRlIiwiJGRpcmVjdGl2ZXMiLCIkY29tcG9uZW50cyIsIm9uQmVmb3JlTW91bnQiLCJvbk1vdW50ZWQiLCJvbkJlZm9yZVVwZGF0ZSIsIm9uVXBkYXRlZCIsIl9pbml0IiwibmFtZSIsImRpcmVjdGl2ZSIsImhhbmRsZXIiLCJUeXBlRXJyb3IiLCJFcnJvciIsInByb3BzIiwicmVuZGVyIiwiYmVmb3JlTW91bnQiLCJtb3VudGVkIiwiYmVmb3JlVXBkYXRlIiwidXBkYXRlZCIsImJlZm9yZVVubW91bnQiLCJ1bm1vdW50ZWQiLCJlbCIsImFwcGx5IiwiZG9jdW1lbnQiLCJib2R5IiwicXVlcnlTZWxlY3RvciIsIk5vZGUiLCJub2RlVHlwZSIsImNsb25lTm9kZSIsIl9jb21waWxlIiwiZGVhbEZvciIsImluaXQiLCJkZWFsQ29tcG9uZW50IiwiY29weSIsImRlYWxEaXJlY3RpdmVzIiwicGFyZW50Tm9kZSIsImluc2VydEJlZm9yZSIsImVsbSIsInJlbW92ZSIsImlkIiwidm5vZGUiLCJhdHRycyIsImRpcmVjdGl2ZXMiLCJldmVudHMiLCJjbHMiLCJhdHRyaWJ1dGVzIiwiaXRlbSIsIm5vZGVOYW1lIiwic3RhcnRzV2l0aCIsImluZGV4IiwiaW5kZXhPZiIsImRpcmVjdGl2ZU5hbWUiLCJzdWJzdHIiLCJtb2RpZmllciIsInVuZGVmaW5lZCIsImV4cCIsIm5vZGVWYWx1ZSIsInJlcyIsInNwbGl0IiwiZXZlbnROYW1lIiwiZmlsdGVyIiwidHJpbSIsInRvTG9jYWxlTG93ZXJDYXNlIiwibm9kZXMiLCJjaGlsZE5vZGVzIiwibGVuZ3RoIiwiaSIsInZuIiwicGFyZW50IiwiY2hpbGRyZW4iLCJwdXNoIiwia2V5IiwibmV3VmFsdWUiLCJvbGRWYWx1ZSIsIl91cGRhdGVWbm9kZSIsIm5ld1Zub2RlIiwib2xkVm5vZGUiLCJpc1NhbWUiLCJpc1VwZGF0ZSIsImVxdWFsIiwiaWYiLCJfdXBkYXRlRGlyZWN0aXZlcyIsIl91cGRhdGVBdHRycyIsIl91cGRhdGVDbGFzcyIsIl91cGRhdGVFdmVudHMiLCJfdXBkYXRlQ2hpbGRyZW4iLCJfdXBkYXRlVGV4dCIsImdldEluZGV4Iiwic3BsaWNlIiwiYSIsImNvbXBhcmUiLCJiIiwidXBkYXRlRGlyZWN0aXZlcyIsIk9iamVjdCIsImFzc2lnbiIsImQiLCJyZW1vdmVEaXJlY3RpdmVzIiwidXBkYXRlQXR0cnMiLCJhdHRyIiwidmFsIiwicmVtb3ZlQXR0cmlidXRlIiwiSlNPTiIsInN0cmluZ2lmeSIsIlN0cmluZyIsInNldEF0dHJpYnV0ZSIsInJlbW92ZUF0dHJzIiwiam9pbiIsInVwZGF0ZUV2ZW50cyIsImFkZEV2ZW50cyIsImFkZEV2ZW50TGlzdGVuZXIiLCJpbmNsdWRlcyIsImUiLCJjdXJyZW50VGFyZ2V0IiwidGFyZ2V0Iiwic3RvcFByb3BhZ2F0aW9uIiwiY2FuY2VsYWJsZSIsInByZXZlbnREZWZhdWx0IiwicGFyYW1zIiwiaCIsImV4ZWN1dGVFeHByZXNzaW9uIiwib25jZSIsImNhcHR1cmUiLCJwYXNzaXZlIiwibmNoaWxkIiwib2NoaWxkIiwiZm9yRWFjaCIsImNoaWxkVm5vZGUiLCJpbm5lckhUTUwiLCJjb3B5Q2hpbGQiLCJhcHBlbmRDaGlsZCIsInRleHQiLCJwcm9wZXJ0eSIsIl9wYXJzZVByb3BlcnR5IiwicGFyZW50S2V5cyIsInBhcmVudEtleSIsImtleXMiLCJfaXNPYmplY3QiLCJnZXQiLCJfZ2V0dGVyIiwic2V0IiwidmFsdWUiLCJfc2V0dGVyIiwiZGVsZXRlUHJvcGVydHkiLCJQcm94eSIsIlJlZmxlY3QiLCJvbGRUYXJnZXQiLCJBcnJheSIsImlzQXJyYXkiLCJfdXBkYXRlVm5vZGVzIiwia2V5MSIsImtleTIiLCJwcm9wZXJ0aWVzIiwibWF0Y2hBcnJheSIsInByb3AiLCJtYXRjaCIsIm5ld1Byb3AiLCJyZXBsYWNlIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBLElBQU1BLFFBQVFDLG1CQUFPQSxDQUFDLENBQVIsQ0FBZDtBQUNBLElBQU1DLG1CQUFtQkQsbUJBQU9BLENBQUMsQ0FBUixDQUF6QjtBQUNBOzs7O0lBR01FLEs7QUFDTCxnQkFBWUMsSUFBWixFQUFrQjtBQUFBOztBQUNqQjtBQUNBLE9BQUtDLEtBQUwsR0FBYSxLQUFLQyxRQUFMLENBQWMsRUFBZCxFQUFrQkYsUUFBUSxFQUExQixDQUFiO0FBQ0E7QUFDQSxPQUFLRyxTQUFMLEdBQWlCLEVBQWpCO0FBQ0E7QUFDQSxPQUFLQyxNQUFMLEdBQWMsSUFBZDtBQUNBO0FBQ0EsT0FBS0MsTUFBTCxHQUFjLElBQWQ7QUFDQTtBQUNBLE9BQUtDLFNBQUwsR0FBaUIsSUFBakI7QUFDQTtBQUNBLE9BQUtDLFdBQUwsR0FBbUIsRUFBbkI7QUFDQTtBQUNBLE9BQUtDLFdBQUwsR0FBbUIsRUFBbkI7QUFDQTtBQUNBLE9BQUtDLGFBQUwsR0FBcUIsWUFBVyxDQUFFLENBQWxDO0FBQ0EsT0FBS0MsU0FBTCxHQUFpQixZQUFXLENBQUUsQ0FBOUI7QUFDQSxPQUFLQyxjQUFMLEdBQXNCLFlBQVcsQ0FBRSxDQUFuQztBQUNBLE9BQUtDLFNBQUwsR0FBaUIsWUFBVyxDQUFFLENBQTlCO0FBQ0E7QUFDQSxPQUFLQyxLQUFMO0FBQ0E7O0FBRUQ7Ozs7Ozs7MEJBR1E7QUFDUDtBQUNBLFFBQUksSUFBSUMsSUFBUixJQUFnQmhCLGdCQUFoQixFQUFpQztBQUNoQyxTQUFLaUIsU0FBTCxDQUFlRCxJQUFmLEVBQXFCaEIsaUJBQWlCZ0IsSUFBakIsQ0FBckI7QUFDQTtBQUNEOztBQUVEOzs7Ozs7Ozs0QkFLVUEsSSxFQUFNRSxPLEVBQVM7QUFDeEI7QUFDQSxPQUFJLENBQUNBLE9BQUwsRUFBYztBQUNiO0FBQ0EsUUFBSSxDQUFD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UUFBZixJQUEyQkEsSUFBL0IsRUFBcUM7QUFDcEMsV0FBTyxJQUFQO0FBQ0E7QUFDRCxVQUFPLEtBQVA7QUFDQTs7Ozs7O0FBS0ZtSyxPQUFPQyxPQUFQLEdBQWlCckssS0FBakIiLCJmaWxlIjoiMi5qcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IFZOb2RlID0gcmVxdWlyZSgnLi92bm9kZScpXHJcbmNvbnN0IGN1c3RvbURpcmVjdGl2ZXMgPSByZXF1aXJlKCcuL2N1c3RvbS1kaXJlY3RpdmVzJylcclxuLyoqXHJcbiAqIOaVsOaNrueKtuaAgeeuoeeQhlxyXG4gKi9cclxuY2xhc3MgU3RhdGUge1xyXG5cdGNvbnN0cnVjdG9yKGRhdGEpIHtcclxuXHRcdC8v5ZON5bqU5pWw5o2uXHJcblx0XHR0aGlzLiRkYXRhID0gdGhpcy5fdG9Qcm94eShbXSwgZGF0YSB8fCB7fSlcclxuXHRcdC8v55uR5ZCs5Zmo5pWw57uEXHJcblx0XHR0aGlzLiR3YXRjaGVycyA9IHt9XHJcblx0XHQvL+aMgui9veebuOWFs+eahOiZmuaLn+iKgueCuVxyXG5cdFx0dGhpcy4kdm5vZGUgPSBudWxsXHJcblx0XHQvL+aXp+eahOiZmuaLn+iKgueCuVxyXG5cdFx0dGhpcy5fdm5vZGUgPSBudWxsXHJcblx0XHQvL+S/neWtmOeahOWIneWni+acqua4suafk+WFg+e0oFxyXG5cdFx0dGhpcy4kdGVtcGxhdGUgPSBudWxsXHJcblx0XHQvL+aMh+S7pOmbhuWQiFxyXG5cdFx0dGhpcy4kZGlyZWN0aXZlcyA9IHt9XHJcblx0XHQvL+e7hOS7tumbhuWQiFxyXG5cdFx0dGhpcy4kY29tcG9uZW50cyA9IHt9XHJcblx0XHQvL+eUn+WRveWRqOacn+mSqeWtkOWHveaVsFxyXG5cdFx0dGhpcy5vbkJlZm9yZU1vdW50ID0gZnVuY3Rpb24oKSB7fVxyXG5cdFx0dGhpcy5vbk1vdW50ZWQgPSBmdW5jdGlvbigpIHt9XHJcblx0XHR0aGlzLm9uQmVmb3JlVXBkYXRlID0gZnVuY3Rpb24oKSB7fVxyXG5cdFx0dGhpcy5vblVwZGF0ZWQgPSBmdW5jdGlvbigpIHt9XHJcblx0XHQvL+WIneWni+WMluaTjeS9nFxyXG5cdFx0dGhpcy5faW5pdCgpXHJcblx0fVxyXG5cclxuXHQvKipcclxuXHQgKiDliJ3lp4vljJbnmoTkuIDkupvlpITnkIZcclxuXHQgKi9cclxuXHRfaW5pdCgpIHtcclxuXHRcdC8v5rOo5YaM5LiA5Lqb5oyH5LukXHJcblx0XHRmb3IobGV0IG5hbWUgaW4gY3VzdG9tRGlyZWN0aXZlcyl7XHJcblx0XHRcdHRoaXMuZGlyZWN0aXZlKG5hbWUsIGN1c3RvbURpcmVjdGl2ZXNbbmFtZV0pXHJcblx0XHR9XHJcblx0fVxyXG5cclxuXHQvKipcclxuXHQgKiDms6jlhowv6I635Y+W6Ieq5a6a5LmJ57uE5Lu2XHJcblx0ICogQHBhcmFtIHtPYmplY3R9IG5hbWUg57uE5Lu25ZCN56ewXHJcblx0ICogQHBhcmFtIHtPYmplY3R9IGhhbmRsZXIg57uE5Lu25rOo5YaM5Y+C5pWwXHJcblx0ICovXHJcblx0Y29tcG9uZW50KG5hbWUsIGhhbmRsZXIpIHtcclxuXHRcdC8vaGFuZGxlcuS4jeWtmOWcqOWImeihqOekuuiOt+WPluiHquWumuS5iee7hOS7tlxyXG5cdFx0aWYgKCFoYW5kbGVyKSB7XHJcblx0XHRcdC8vbmFtZeS4jeWtmOWcqO+8jOihqOekuuiOt+WPluivpXN0YXRl55qE5omA5pyJ6Ieq5a6a5LmJ57uE5Lu2XHJcblx0XHRcdGlmICghbmFtZSkge1xyXG5cdFx0XHRcdHJldHVybiB0aGlzLiRjb21wb25lbnRzXHJcblx0XHRcdH1cclxuXHRcdFx0Ly/ojrflj5bmjIflrprlkI3np7DnmoToh6rlrprkuYnnu4Tku7ZcclxuXHRcdFx0cmV0dXJuIHRoaXMuJGNvbXBvbmVudHNbbmFtZV1cclxuXHRcdH1cclxuXHJcblx0XHQvL+S7peS4i+S4uuazqOWGjOiHquWumuS5iee7hOS7tueahOWunueOsFxyXG5cclxuXHRcdC8v57uE5Lu25ZCN5LiN5a2Y5Zyo5oql6ZSZXHJcblx0XHRpZiAoIW5hbWUpIHtcclxuXHRcdFx0dGhyb3cgbmV3IFR5cGVFcnJvcignWW91IG5lZWQgdG8gZ2l2ZSB0aGUgY29tcG9uZW50IGEgbmFtZScpXHJcblx0XHR9XHJcblx0XHQvL+e7hOS7tumHjeWkjeWumuS5ieaKpemUmVxyXG5cdFx0aWYgKHRoaXMuJGNvbXBvbmVudHNbbmFtZV0pIHtcclxuXHRcdFx0dGhyb3cgbmV3IEVycm9yKCdUaGUgY29tcG9uZW50IG5hbWVkIFwiJyArIG5hbWUgKyAnXCIgaXMgYWxyZWFkeSBkZWZpbmVkJylcclxuXHRcdH1cclxuXHRcdGxldCBwcm9wcyA9IFtdXHJcblx0XHRsZXQgcmVuZGVyID0gbnVsbFxyXG5cdFx0Ly/nu4Tku7bms6jlhozlj4LmlbDkuLrlh73mlbBcclxuXHRcdGlmICh0eXBlb2YgaGFuZGxlciA9PSAnZnVuY3Rpb24nKSB7XHJcblx0XHRcdHJlbmRlciA9IGhhbmRsZXJcclxuXHRcdH0gZWxzZSBpZiAodHlwZW9mIGhhbmRsZXIgPT0gJ29iamVjdCcgJiYgaGFuZGxlcikge1xyXG5cdFx0XHRwcm9wcyA9IGhhbmRsZXIucHJvcHMgfHwgW11cclxuXHRcdFx0cmVuZGVyID0gaGFuZGxlci5yZW5kZXJcclxuXHRcdH1cclxuXHRcdGlmICh0eXBlb2YgcmVuZGVyICE9ICdmdW5jdGlvbicpIHtcclxuXHRcdFx0dGhyb3cgbmV3IFR5cGVFcnJvcignVGhlIGNvbXBvbmVudCBuYW1lZCBcIicgKyBuYW1lICsgJ1wiIG5lZWQgdG8gZGVmaW5lIGEgaGFuZGxpbmcgbWV0aG9kJylcclxuXHRcdH1cclxuXHRcdC8v5rOo5YaM6K+l57uE5Lu2XHJcblx0XHR0aGlzLiRjb21wb25lbnRzW25hbWVdID0ge1xyXG5cdFx0XHRwcm9wcyxcclxuXHRcdFx0cmVuZGVyXHJcblx0XHR9XHJcblx0fVxyXG5cclxuXHQvKipcclxuXHQgKiDms6jlhowv6I635Y+W6Ieq5a6a5LmJ5oyH5LukXHJcblx0ICogQHBhcmFtIHtTdHJpbmd9IG5hbWUg5oyH5Luk5ZCN56ewXHJcblx0ICogQHBhcmFtIHtPYmplY3R9IGhhbmRsZXIg5oyH5Luk5rOo5YaM5Y+C5pWwXHJcblx0ICovXHJcblx0ZGlyZWN0aXZlKG5hbWUsIGhhbmRsZXIpIHtcclxuXHRcdC8vaGFuZGxlcuS4jeWtmOWcqOWImeihqOekuuiOt+WPluiHquWumuS5ieeahOaMh+S7pFxyXG5cdFx0aWYgKCFoYW5kbGVyKSB7XHJcblx0XHRcdC8vbmFtZeS4jeWtmOWcqO+8jOihqOekuuiOt+WPluivpXN0YXRl55qE5omA5pyJ6Ieq5a6a5LmJ5oyH5LukXHJcblx0XHRcdGlmICghbmFtZSkge1xyXG5cdFx0XHRcdHJldHVybiB0aGlzLiRkaXJlY3RpdmVzXHJcblx0XHRcdH1cclxuXHRcdFx0Ly/ojrflj5bmjIflrprlkI3np7DnmoToh6rlrprkuYnnu4Tku7ZcclxuXHRcdFx0cmV0dXJuIHRoaXMuJGRpcmVjdGl2ZXNbbmFtZV1cclxuXHRcdH1cclxuXHJcblx0XHQvL+S7peS4i+S4uuazqOWGjOiHquWumuS5ieaMh+S7pOeahOWunueOsFxyXG5cclxuXHRcdC8v5oyH5Luk5ZCN56ew5LiN5a2Y5Zyo5oql6ZSZXHJcblx0XHRpZiAoIW5hbWUpIHtcclxuXHRcdFx0dGhyb3cgbmV3IFR5cGVFcnJvcignWW91IG5lZWQgdG8gZ2l2ZSB0aGUgZGlyZWN0aXZlIGEgbmFtZScpXHJcblx0XHR9XHJcblx0XHQvL+aMh+S7pOmHjeWkjeWumuS5ieaKpemUmVxyXG5cdFx0aWYgKHRoaXMuJGRpcmVjdGl2ZXNbbmFtZV0pIHtcclxuXHRcdFx0dGhyb3cgbmV3IEVycm9yKCdUaGUgZGlyZWN0aXZlIG5hbWVkIFwiJyArIG5hbWUgKyAnXCIgaXMgYWxyZWFkeSBkZWZpbmVkJylcclxuXHRcdH1cclxuXHRcdC8v5oyH5Luk6ZKp5a2Q5Ye95pWwXHJcblx0XHRsZXQgYmVmb3JlTW91bnQgPSBmdW5jdGlvbigpIHt9XHJcblx0XHRsZXQgbW91bnRlZCA9IGZ1bmN0aW9uKCkge31cclxuXHRcdGxldCBiZWZvcmVVcGRhdGUgPSBmdW5jdGlvbigpIHt9XHJcblx0XHRsZXQgdXBkYXRlZCA9IGZ1bmN0aW9uKCkge31cclxuXHRcdGxldCBiZWZvcmVVbm1vdW50ID0gZnVuY3Rpb24oKSB7fVxyXG5cdFx0bGV0IHVubW91bnRlZCA9IGZ1bmN0aW9uKCkge31cclxuXHRcdC8v5aaC5p6c5oyH5Luk5rOo5YaM5Y+C5pWw5piv5LiA5Liq5Ye95pWw77yM6KGo56S6bW91bnRlZOWHveaVsFxyXG5cdFx0aWYgKHR5cGVvZiBoYW5kbGVyID09ICdmdW5jdGlvbicpIHtcclxuXHRcdFx0bW91bnRlZCA9IGhhbmRsZXJcclxuXHRcdH1cclxuXHRcdC8v5aaC5p6c5oyH5Luk5rOo5YaM5Y+C5pWw5piv5LiA5Liq5a+56LGh77yM6L+b6KGM55u45a+555qE6LWL5YC8XHJcblx0XHRlbHNlIGlmICh0eXBlb2YgaGFuZGxlciA9PSAnb2JqZWN0JyAmJiBoYW5kbGVyKSB7XHJcblx0XHRcdGJlZm9yZU1vdW50ID0gaGFuZGxlci5iZWZvcmVNb3VudCB8fCBmdW5jdGlvbigpIHt9XHJcblx0XHRcdG1vdW50ZWQgPSBoYW5kbGVyLm1vdW50ZWQgfHwgZnVuY3Rpb24oKSB7fVxyXG5cdFx0XHRiZWZvcmVVcGRhdGUgPSBoYW5kbGVyLmJlZm9yZVVwZGF0ZSB8fCBmdW5jdGlvbigpIHt9XHJcblx0XHRcdHVwZGF0ZWQgPSBoYW5kbGVyLnVwZGF0ZWQgfHwgZnVuY3Rpb24oKSB7fVxyXG5cdFx0XHRiZWZvcmVVbm1vdW50ID0gaGFuZGxlci5iZWZvcmVVbm1vdW50IHx8IGZ1bmN0aW9uKCkge31cclxuXHRcdFx0dW5tb3VudGVkID0gaGFuZGxlci51bm1vdW50ZWQgfHwgZnVuY3Rpb24oKSB7fVxyXG5cdFx0fVxyXG5cdFx0Ly/ms6jlhozmjIfku6RcclxuXHRcdHRoaXMuJGRpcmVjdGl2ZXNbbmFtZV0gPSB7XHJcblx0XHRcdGJlZm9yZU1vdW50LFxyXG5cdFx0XHRtb3VudGVkLFxyXG5cdFx0XHRiZWZvcmVVcGRhdGUsXHJcblx0XHRcdHVwZGF0ZWQsXHJcblx0XHRcdGJlZm9yZVVubW91bnQsXHJcblx0XHRcdHVubW91bnRlZFxyXG5cdFx0fVxyXG5cdH1cclxuXHJcblxyXG5cdC8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5cdC8v5Lul5LiL5pa55rOV5piv5a6e546wdm5vZGXnm7jlhbPnmoRcclxuXHQvLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuXHJcblx0LyoqXHJcblx0ICog5a6e546w5oyC6L29XHJcblx0ICogQHBhcmFtIHtFbGVtZW50fSBlbCDmjILovb3lhYPntKBcclxuXHQgKi9cclxuXHRtb3VudChlbCkge1xyXG5cdFx0Ly9iZWZvcmVNb3VudOeUn+WRveWRqOacn+WHveaVsOinpuWPkVxyXG5cdFx0aWYgKHR5cGVvZiB0aGlzLm9uQmVmb3JlTW91bnQgPT0gJ2Z1bmN0aW9uJykge1xyXG5cdFx0XHR0aGlzLm9uQmVmb3JlTW91bnQuYXBwbHkodGhpcy4kZGF0YSlcclxuXHRcdH1cclxuXHRcdC8v5qCh6aqM5Y+C5pWwXHJcblx0XHRpZiAoIWVsKSB7XHJcblx0XHRcdHRocm93IG5ldyBFcnJvcignWW91IG11c3Qgc3BlY2lmeSBhbiBlbGVtZW50IHRvIG1vdW50JylcclxuXHRcdH1cclxuXHRcdGlmICh0eXBlb2YgZWwgPT0gJ3N0cmluZycpIHtcclxuXHRcdFx0ZWwgPSBkb2N1bWVudC5ib2R5LnF1ZXJ5U2VsZWN0b3IoZWwpXHJcblx0XHR9XHJcblx0XHRpZiAoIShlbCBpbnN0YW5jZW9mIE5vZGUgJiYgZWwubm9kZVR5cGUgPT09IDEpKSB7XHJcblx0XHRcdHRocm93IG5ldyBUeXBlRXJyb3IoJ1RoZSBtb3VudCBlbGVtZW50IGlzIHVuZGVmaW5lZCcpXHJcblx0XHR9XHJcblx0XHQvL+S/neWtmOacgOaXqeeahGVs5YWD57SgXHJcblx0XHR0aGlzLiR0ZW1wbGF0ZSA9IGVsLmNsb25lTm9kZSh0cnVlKVxyXG5cdFx0Ly/nlJ/miJDmnKrliJ3lp4vljJbnmoTomZrmi5/oioLngrlcclxuXHRcdHRoaXMuJHZub2RlID0gdGhpcy5fY29tcGlsZSgndm5vZGUnLCBlbClcclxuXHRcdC8v5aSE55CGZm9y5oyH5Luk6L+b6KGM6IqC54K55YWL6ZqGXHJcblx0XHR0aGlzLiR2bm9kZS5kZWFsRm9yKHRoaXMpXHJcblx0XHQvL+WIneWni+WMluiZmuaLn+iKgueCue+8jOi/m+ihjOaVsOaNrue7keWumui1i+WAvFxyXG5cdFx0dGhpcy4kdm5vZGUuaW5pdCh0aGlzKVxyXG5cdFx0Ly/lpITnkIboh6rlrprkuYnnu4Tku7bnmoTmuLLmn5NcclxuXHRcdHRoaXMuJHZub2RlLmRlYWxDb21wb25lbnQodGhpcylcclxuXHRcdC8v5L+d5a2Y5Yiw5pen6IqC54K55qCRXHJcblx0XHR0aGlzLl92bm9kZSA9IHRoaXMuJHZub2RlLmNvcHkoKVxyXG5cdFx0Ly/op6blj5Hoh6rlrprkuYnmjIfku6TnmoRiZWZvcmVNb3VudOmSqeWtkOWHveaVsFxyXG5cdFx0dGhpcy5fdm5vZGUuZGVhbERpcmVjdGl2ZXModGhpcywgJ2JlZm9yZU1vdW50JylcclxuXHRcdC8v6L+b6KGMZG9t5riy5p+T77yM55Sf5oiQ5paw55qEZG9tXHJcblx0XHR0aGlzLl92bm9kZS5yZW5kZXIodGhpcylcclxuXHRcdC8v5bCG5paw55qEZG9t5o+S5YWl5ZCM5pe25Yig6Zmk5pen55qEZG9tXHJcblx0XHRlbC5wYXJlbnROb2RlLmluc2VydEJlZm9yZSh0aGlzLl92bm9kZS5lbG0sIGVsKVxyXG5cdFx0ZWwucmVtb3ZlKClcclxuXHRcdC8v6Kem5Y+R6Ieq5a6a5LmJ5oyH5Luk55qEbW91bnRlZFxyXG5cdFx0dGhpcy5fdm5vZGUuZGVhbERpcmVjdGl2ZXModGhpcywgJ21vdW50ZWQnKVxyXG5cdFx0Ly9tb3VudGVk55Sf5ZG95ZGo5pyf5Ye95pWw6Kem5Y+RXHJcblx0XHRpZiAodHlwZW9mIHRoaXMub25Nb3VudGVkID09ICdmdW5jdGlvbicpIHtcclxuXHRcdFx0dGhpcy5vbk1vdW50ZWQuYXBwbHkodGhpcy4kZGF0YSlcclxuXHRcdH1cclxuXHRcdC8v6L+U5Zuec3RhdGXlr7nosaFcclxuXHRcdHJldHVybiB0aGlzXHJcblx0fVxyXG5cclxuXHQvKipcclxuXHQgKiDlsIbkuIDkuKrmjIflrprnmoTlhYPntKDlj4rlhbblrZDlrZnoioLngrnmnoTpgKDmiJDkuIDkuKromZrmi59kb23moJEo5q2k5pe26Jma5oufZG9t5pyq5Yid5aeL5YyW5pWw5o2uKVxyXG5cdCAqIEBwYXJhbSB7U3RyaW5nfSBpZCBpZFxyXG5cdCAqIEBwYXJhbSB7Tm9kZX0gZWwg55uu5qCH5YWD57SgXHJcblx0ICovXHJcblx0X2NvbXBpbGUoaWQsIGVsKSB7XHJcblx0XHRsZXQgdm5vZGUgPSBudWxsXHJcblx0XHQvL+WFg+e0oOiKgueCuVxyXG5cdFx0aWYgKGVsLm5vZGVUeXBlID09IDEpIHtcclxuXHRcdFx0Ly/lrprkuYnlsZ7mgKfnmoTpm4blkIhcclxuXHRcdFx0bGV0IGF0dHJzID0ge31cclxuXHRcdFx0Ly/lrprkuYnmjIfku6TnmoTpm4blkIhcclxuXHRcdFx0bGV0IGRpcmVjdGl2ZXMgPSB7fVxyXG5cdFx0XHQvL+WumuS5ieS6i+S7tueahOmbhuWQiFxyXG5cdFx0XHRsZXQgZXZlbnRzID0ge31cclxuXHRcdFx0Ly/lrprkuYnmoLflvI/nsbvlrZfmrrVcclxuXHRcdFx0bGV0IGNscyA9ICcnXHJcblx0XHRcdC8v6YGN5Y6G6K+l5YWD57Sg55qE5omA5pyJ5bGe5oCnXHJcblx0XHRcdGZvciAobGV0IGl0ZW0gb2YgZWwuYXR0cmlidXRlcykge1xyXG5cdFx0XHRcdC8vQOW8gOWktOino+aekOS4uuaMh+S7pFxyXG5cdFx0XHRcdGlmIChpdGVtLm5vZGVOYW1lLnN0YXJ0c1dpdGgoJ0AnKSkge1xyXG5cdFx0XHRcdFx0Ly/mn6Xmib7kv67ppbDnrKbnmoTkvY3nva5cclxuXHRcdFx0XHRcdGxldCBpbmRleCA9IGl0ZW0ubm9kZU5hbWUuaW5kZXhPZignOicpXHJcblx0XHRcdFx0XHQvL+WtmOWcqOS/rumlsOesplxyXG5cdFx0XHRcdFx0aWYgKGluZGV4ID4gMCkge1xyXG5cdFx0XHRcdFx0XHQvL+aMh+S7pOWQjeensFxyXG5cdFx0XHRcdFx0XHRsZXQgZGlyZWN0aXZlTmFtZSA9IGl0ZW0ubm9kZU5hbWUuc3Vic3RyKDEsIGluZGV4IC0gMSlcclxuXHRcdFx0XHRcdFx0Ly/kv67ppbDnrKblrZfmrrVcclxuXHRcdFx0XHRcdFx0bGV0IG1vZGlmaWVyID0gaXRlbS5ub2RlTmFtZS5zdWJzdHIoaW5kZXggKyAxKVxyXG5cdFx0XHRcdFx0XHQvL+WKoOWFpeaMh+S7pOmbhuWQiFxyXG5cdFx0XHRcdFx0XHRpZiAoZGlyZWN0aXZlTmFtZSkge1xyXG5cdFx0XHRcdFx0XHRcdGRpcmVjdGl2ZXNbZGlyZWN0aXZlTmFtZV0gPSB7XHJcblx0XHRcdFx0XHRcdFx0XHRtb2RpZmllcjogbW9kaWZpZXIgfHwgdW5kZWZpbmVkLFxyXG5cdFx0XHRcdFx0XHRcdFx0ZXhwOiBpdGVtLm5vZGVWYWx1ZVxyXG5cdFx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0Ly/kuI3lrZjlnKjkv67ppbDnrKZcclxuXHRcdFx0XHRcdGVsc2Uge1xyXG5cdFx0XHRcdFx0XHQvL+aMh+S7pOWQjeensFxyXG5cdFx0XHRcdFx0XHRsZXQgZGlyZWN0aXZlTmFtZSA9IGl0ZW0ubm9kZU5hbWUuc3Vic3RyKDEpXHJcblx0XHRcdFx0XHRcdGlmIChkaXJlY3RpdmVOYW1lKSB7XHJcblx0XHRcdFx0XHRcdFx0Ly/liqDlhaXmjIfku6Tpm4blkIhcclxuXHRcdFx0XHRcdFx0XHRkaXJlY3RpdmVzW2RpcmVjdGl2ZU5hbWVdID0ge1xyXG5cdFx0XHRcdFx0XHRcdFx0bW9kaWZpZXI6IHVuZGVmaW5lZCxcclxuXHRcdFx0XHRcdFx0XHRcdGV4cDogaXRlbS5ub2RlVmFsdWVcclxuXHRcdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHR9XHJcblx0XHRcdFx0Ly8j5byA5aS06Kej5p6Q5Li65LqL5Lu2XHJcblx0XHRcdFx0ZWxzZSBpZiAoaXRlbS5ub2RlTmFtZS5zdGFydHNXaXRoKCcjJykpIHtcclxuXHRcdFx0XHRcdC8v5LqL5Lu26Kej5p6Q77yM5Y+v6IO95a2Y5Zyo5L+u6aWw56ymXHJcblx0XHRcdFx0XHRsZXQgcmVzID0gaXRlbS5ub2RlTmFtZS5zdWJzdHIoMSkuc3BsaXQoJy4nKVxyXG5cdFx0XHRcdFx0Ly/ojrflj5bkuovku7blkI3np7BcclxuXHRcdFx0XHRcdGxldCBldmVudE5hbWUgPSByZXNbMF1cclxuXHRcdFx0XHRcdC8v5Yqg5YWl5LqL5Lu26ZuG5ZCIXHJcblx0XHRcdFx0XHRldmVudHNbZXZlbnROYW1lXSA9IHtcclxuXHRcdFx0XHRcdFx0aGFuZGxlcjogaXRlbS5ub2RlVmFsdWUsXHJcblx0XHRcdFx0XHRcdG1vZGlmaWVyOiByZXMuZmlsdGVyKChpdGVtLCBpbmRleCkgPT4ge1xyXG5cdFx0XHRcdFx0XHRcdHJldHVybiBpbmRleCA+IDBcclxuXHRcdFx0XHRcdFx0fSlcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHR9XHJcblx0XHRcdFx0Ly/moLflvI9jbGFzc+WNleeLrOaPkOWPluWHuuadpVxyXG5cdFx0XHRcdGVsc2UgaWYgKGl0ZW0ubm9kZU5hbWUgPT0gJ2NsYXNzJykge1xyXG5cdFx0XHRcdFx0Y2xzID0gaXRlbS5ub2RlVmFsdWUudHJpbSgpXHJcblx0XHRcdFx0fVxyXG5cdFx0XHRcdC8v5pmu6YCa5bGe5oCn77yM5b+955WlcmVmeC1jbG9ha+WxnuaAp1xyXG5cdFx0XHRcdGVsc2UgaWYgKGl0ZW0ubm9kZU5hbWUgIT0gJ3JlZmV4LWNsb2FrJykge1xyXG5cdFx0XHRcdFx0YXR0cnNbaXRlbS5ub2RlTmFtZV0gPSBpdGVtLm5vZGVWYWx1ZVxyXG5cdFx0XHRcdH1cclxuXHRcdFx0fVxyXG5cdFx0XHQvL+WIm+W7uuiZmuaLn+iKgueCuVxyXG5cdFx0XHR2bm9kZSA9IG5ldyBWTm9kZShlbC5ub2RlTmFtZS50b0xvY2FsZUxvd2VyQ2FzZSgpLCBhdHRycywgY2xzLCBkaXJlY3RpdmVzLCBldmVudHMsIHVuZGVmaW5lZCwgaWQsIGVsXHJcblx0XHRcdFx0Lm5vZGVUeXBlKVxyXG5cdFx0XHQvL+iOt+WPluebruagh+WFg+e0oOWtkOiKgueCuVxyXG5cdFx0XHRsZXQgbm9kZXMgPSBlbC5jaGlsZE5vZGVzXHJcblx0XHRcdC8v5a2Q6IqC54K56ZW/5bqmXHJcblx0XHRcdGxldCBsZW5ndGggPSBub2Rlcy5sZW5ndGhcclxuXHRcdFx0Ly/pgY3ljoblrZDoioLngrlcclxuXHRcdFx0Zm9yIChsZXQgaSA9IDA7IGkgPCBsZW5ndGg7IGkrKykge1xyXG5cdFx0XHRcdC8v6YCS5b2S6LCD55So5pys5pa55rOV6L+b6KGM5a2Q6IqC54K555qE5Yib5bu6XHJcblx0XHRcdFx0bGV0IHZuID0gdGhpcy5fY29tcGlsZShpZCArICdfJyArIGksIG5vZGVzW2ldKVxyXG5cdFx0XHRcdC8v5aaC5p6c5Yib5bu65oiQ5YqfXHJcblx0XHRcdFx0aWYgKHZuKSB7XHJcblx0XHRcdFx0XHQvL+iuvue9rueItuiKgueCuVxyXG5cdFx0XHRcdFx0dm4ucGFyZW50ID0gdm5vZGVcclxuXHRcdFx0XHRcdC8v5Yqg5YWl5Yiw54i26IqC54K55LiLXHJcblx0XHRcdFx0XHR2bm9kZS5jaGlsZHJlbi5wdXNoKHZuKVxyXG5cdFx0XHRcdH1cclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cdFx0Ly/mlofmnKzoioLngrnmiJbogIXms6jph4roioLngrlcclxuXHRcdGVsc2UgaWYgKGVsLm5vZGVUeXBlID09IDMgfHwgZWwubm9kZVR5cGUgPT0gOCkge1xyXG5cdFx0XHQvL+ebtOaOpeWIm+W7ulxyXG5cdFx0XHR2bm9kZSA9IG5ldyBWTm9kZShlbC5ub2RlTmFtZS50b0xvY2FsZUxvd2VyQ2FzZSgpLCB7fSwgJycsIHt9LCB7fSwgZWwubm9kZVZhbHVlLCBpZCwgZWwubm9kZVR5cGUpXHJcblx0XHR9XHJcblx0XHRyZXR1cm4gdm5vZGVcclxuXHR9XHJcblxyXG5cdC8qKlxyXG5cdCAqIOabtOaWsOiZmuaLn+iKgueCuVxyXG5cdCAqIEBwYXJhbSB7QXJyYXl9IGtleVxyXG5cdCAqIEBwYXJhbSB7T2JqZWN0fSBuZXdWYWx1ZVxyXG5cdCAqIEBwYXJhbSB7T2JqZWN0fSBvbGRWYWx1ZVxyXG5cdCAqL1xyXG5cdF91cGRhdGVWbm9kZXMoa2V5LCBuZXdWYWx1ZSwgb2xkVmFsdWUpIHtcclxuXHRcdC8v5pu05paw6Jma5ouf6IqC54K55qCRXHJcblx0XHR0aGlzLiR2bm9kZSA9IHRoaXMuX2NvbXBpbGUoJ3Zub2RlJywgdGhpcy4kdGVtcGxhdGUpXHJcblx0XHQvL+WkhOeQhmZvcuaMh+S7pOi/m+ihjOiKgueCueWFi+mahlxyXG5cdFx0dGhpcy4kdm5vZGUuZGVhbEZvcih0aGlzKVxyXG5cdFx0Ly/liJ3lp4vljJboioLngrnmoJFcclxuXHRcdHRoaXMuJHZub2RlLmluaXQodGhpcylcclxuXHRcdC8v5aSE55CG6Ieq5a6a5LmJ57uE5Lu255qE5riy5p+TXHJcblx0XHR0aGlzLiR2bm9kZS5kZWFsQ29tcG9uZW50KHRoaXMpXHJcblx0XHQvL+aWsOaXp+agueiKgueCueavlOi+g1xyXG5cdFx0dGhpcy5fdXBkYXRlVm5vZGUodGhpcy4kdm5vZGUsIHRoaXMuX3Zub2RlKVxyXG5cdH1cclxuXHJcblx0LyoqXHJcblx0ICog5q+U6L6D6IqC54K56L+b6KGM5pu05pawXHJcblx0ICogQHBhcmFtIHtWTm9kZX0gbmV3Vm5vZGVcclxuXHQgKiBAcGFyYW0ge1ZOb2RlfSBvbGRWbm9kZVxyXG5cdCAqL1xyXG5cdF91cGRhdGVWbm9kZShuZXdWbm9kZSwgb2xkVm5vZGUpIHtcclxuXHRcdC8v5aaC5p6c6L+Z5Lik5Liq6IqC54K55YC85b6X5q+U6L6DXHJcblx0XHRpZiAobmV3Vm5vZGUuaXNTYW1lKG9sZFZub2RlKSkge1xyXG5cdFx0XHQvL+iKgueCueaYr+WQpuabtOaWsFxyXG5cdFx0XHRsZXQgaXNVcGRhdGUgPSAhbmV3Vm5vZGUuZXF1YWwob2xkVm5vZGUpXHJcblx0XHRcdC8v5aaC5p6c6IqC54K55pu05paw77yM5YWI6Kem5Y+R5oyH5Luk55qEYmVmb3JlVXBkYXRl6ZKp5a2Q5Ye95pWwXHJcblx0XHRcdGlmIChpc1VwZGF0ZSkge1xyXG5cdFx0XHRcdG9sZFZub2RlLmRlYWxEaXJlY3RpdmVzKHRoaXMsICdiZWZvcmVVcGRhdGUnLCBmYWxzZSlcclxuXHRcdFx0fVxyXG5cdFx0XHQvL+WFg+e0oOiKgueCuVxyXG5cdFx0XHRpZiAobmV3Vm5vZGUubm9kZVR5cGUgPT0gMSAmJiBvbGRWbm9kZS5pZikge1xyXG5cdFx0XHRcdC8v5pu05paw5oyH5LukXHJcblx0XHRcdFx0dGhpcy5fdXBkYXRlRGlyZWN0aXZlcyhuZXdWbm9kZSwgb2xkVm5vZGUpXHJcblx0XHRcdFx0Ly/mm7TmlrDlsZ7mgKdcclxuXHRcdFx0XHR0aGlzLl91cGRhdGVBdHRycyhuZXdWbm9kZSwgb2xkVm5vZGUpXHJcblx0XHRcdFx0Ly/mm7TmlrDmoLflvI/nsbtcclxuXHRcdFx0XHR0aGlzLl91cGRhdGVDbGFzcyhuZXdWbm9kZSwgb2xkVm5vZGUpXHJcblx0XHRcdFx0Ly/mm7TmlrDkuovku7ZcclxuXHRcdFx0XHR0aGlzLl91cGRhdGVFdmVudHMobmV3Vm5vZGUsIG9sZFZub2RlKVxyXG5cdFx0XHRcdC8v5a2Q6IqC54K56L+b6KGM5q+U6L6DXHJcblx0XHRcdFx0dGhpcy5fdXBkYXRlQ2hpbGRyZW4obmV3Vm5vZGUsIG9sZFZub2RlKVxyXG5cdFx0XHR9XHJcblx0XHRcdC8v5paH5pys6IqC54K5XHJcblx0XHRcdGVsc2UgaWYgKG5ld1Zub2RlLm5vZGVUeXBlID09IDMpIHtcclxuXHRcdFx0XHQvL+abtOaWsOiKgueCueaWh+Wtl1xyXG5cdFx0XHRcdHRoaXMuX3VwZGF0ZVRleHQobmV3Vm5vZGUsIG9sZFZub2RlKVxyXG5cdFx0XHR9XHJcblx0XHRcdC8v6IqC54K55pu05paw77yM6Kem5Y+R5oyH5Luk55qEdXBkYXRlZOmSqeWtkOWHveaVsFxyXG5cdFx0XHRpZiAoaXNVcGRhdGUpIHtcclxuXHRcdFx0XHRvbGRWbm9kZS5kZWFsRGlyZWN0aXZlcyh0aGlzLCAndXBkYXRlZCcsIGZhbHNlKVxyXG5cdFx0XHR9XHJcblx0XHR9XHJcblx0XHQvL+ebtOaOpeabv+aNolxyXG5cdFx0ZWxzZSB7XHJcblx0XHRcdC8v5aSN5Yi25paw6IqC54K5XHJcblx0XHRcdGxldCB2bm9kZSA9IG5ld1Zub2RlLmNvcHkoKVxyXG5cdFx0XHQvL+iOt+WPlueItuiKgueCuVxyXG5cdFx0XHRsZXQgcGFyZW50ID0gb2xkVm5vZGUucGFyZW50XHJcblx0XHRcdC8v5pu05paw5o+S5YWl55qE6IqC54K555qE54i26IqC54K5XHJcblx0XHRcdHZub2RlLnBhcmVudCA9IHBhcmVudFxyXG5cdFx0XHQvL+inpuWPkeiHquWumuS5ieaMh+S7pOeahGJlZm9yZVVubW91bnRcclxuXHRcdFx0b2xkVm5vZGUuZGVhbERpcmVjdGl2ZXModGhpcywgJ2JlZm9yZVVubW91bnQnKVxyXG5cdFx0XHQvL+iOt+WPluaXp+iKgueCueWcqOeItuiKgueCueS4reeahOW6j+WIl1xyXG5cdFx0XHRsZXQgaW5kZXggPSBvbGRWbm9kZS5nZXRJbmRleCgpXHJcblx0XHRcdC8v5Yig6Zmk5Y6f5p2l55qE5pen6IqC54K577yM5Zyo5Y6f5p2l55qE5L2N572u5LiK5o+S5YWl5paw5bu655qE6IqC54K5XHJcblx0XHRcdHBhcmVudC5jaGlsZHJlbi5zcGxpY2UoaW5kZXgsIDEsIHZub2RlKVxyXG5cdFx0XHQvL+inpuWPkeiHquWumuS5ieaMh+S7pOeahGJlZm9yZU1vdW50XHJcblx0XHRcdHZub2RlLmRlYWxEaXJlY3RpdmVzKHRoaXMsICdiZWZvcmVNb3VudCcpXHJcblx0XHRcdC8v5riy5p+T6K+l6IqC54K5XHJcblx0XHRcdHZub2RlLnJlbmRlcih0aGlzKVxyXG5cdFx0XHQvL+WwhuiKgueCueWFg+e0oOaPkuWFpeWOn+adpeeahOS9jee9rlxyXG5cdFx0XHRvbGRWbm9kZS5lbG0ucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUodm5vZGUuZWxtLCBvbGRWbm9kZS5lbG0pXHJcblx0XHRcdC8v5Yig6Zmk5Y6f5p2l55qEZG9t5YWD57SgXHJcblx0XHRcdG9sZFZub2RlLmVsbS5yZW1vdmUoKVxyXG5cdFx0XHQvL+inpuWPkeiHquWumuS5ieaMh+S7pOeahHVubW91bnRlZFxyXG5cdFx0XHRvbGRWbm9kZS5kZWFsRGlyZWN0aXZlcyh0aGlzLCAndW5tb3VudGVkJylcclxuXHRcdFx0Ly/op6blj5Hoh6rlrprkuYnmjIfku6TnmoRtb3VudGVkXHJcblx0XHRcdHZub2RlLmRlYWxEaXJlY3RpdmVzKHRoaXMsICdtb3VudGVkJylcclxuXHRcdH1cclxuXHR9XHJcblxyXG5cdC8qKlxyXG5cdCAqIOabtOaWsOaMh+S7pFxyXG5cdCAqIEBwYXJhbSB7Vk5vZGV9IG5ld1Zub2RlXHJcblx0ICogQHBhcmFtIHtWTm9kZX0gb2xkVm5vZGVcclxuXHQgKi9cclxuXHRfdXBkYXRlRGlyZWN0aXZlcyhuZXdWbm9kZSwgb2xkVm5vZGUpIHtcclxuXHRcdC8v6I635Y+W5paw5aKe5oiW6ICF5L+u5pS555qE5oyH5LukXHJcblx0XHRsZXQgYSA9IG5ld1Zub2RlLmNvbXBhcmUob2xkVm5vZGUsICdkaXJlY3RpdmVzJywgMClcclxuXHRcdGxldCBiID0gbmV3Vm5vZGUuY29tcGFyZShvbGRWbm9kZSwgJ2RpcmVjdGl2ZXMnLCAxKVxyXG5cdFx0bGV0IHVwZGF0ZURpcmVjdGl2ZXMgPSBPYmplY3QuYXNzaWduKGEsIGIpXHJcblx0XHQvL+i/m+ihjOabtOaWsOaTjeS9nFxyXG5cdFx0Zm9yIChsZXQgZCBpbiB1cGRhdGVEaXJlY3RpdmVzKSB7XHJcblx0XHRcdG9sZFZub2RlLmRpcmVjdGl2ZXNbZF0gPSBPYmplY3QuYXNzaWduKHt9LCB1cGRhdGVEaXJlY3RpdmVzW2RdKVxyXG5cdFx0fVxyXG5cdFx0Ly/ojrflj5bnp7vpmaTnmoTmjIfku6RcclxuXHRcdGxldCByZW1vdmVEaXJlY3RpdmVzID0gbmV3Vm5vZGUuY29tcGFyZShvbGRWbm9kZSwgJ2RpcmVjdGl2ZXMnLCAyKVxyXG5cdFx0Ly/ov5vooYznp7vpmaTmk43kvZxcclxuXHRcdGZvciAobGV0IGQgaW4gcmVtb3ZlRGlyZWN0aXZlcykge1xyXG5cdFx0XHRkZWxldGUgb2xkVm5vZGUuZGlyZWN0aXZlc1tkXVxyXG5cdFx0fVxyXG5cdH1cclxuXHJcblx0LyoqXHJcblx0ICog5pu05paw5bGe5oCnXHJcblx0ICogQHBhcmFtIHtWTm9kZX0gbmV3Vm5vZGVcclxuXHQgKiBAcGFyYW0ge1ZOb2RlfSBvbGRWbm9kZVxyXG5cdCAqL1xyXG5cdF91cGRhdGVBdHRycyhuZXdWbm9kZSwgb2xkVm5vZGUpIHtcclxuXHRcdC8v6I635Y+W5paw5aKe5oiW6ICF5L+u5pS555qE5bGe5oCnXHJcblx0XHRsZXQgYSA9IG5ld1Zub2RlLmNvbXBhcmUob2xkVm5vZGUsICdhdHRycycsIDApXHJcblx0XHRsZXQgYiA9IG5ld1Zub2RlLmNvbXBhcmUob2xkVm5vZGUsICdhdHRycycsIDEpXHJcblx0XHRsZXQgdXBkYXRlQXR0cnMgPSBPYmplY3QuYXNzaWduKGEsIGIpXHJcblx0XHQvL+i/m+ihjOabtOaWsOaTjeS9nFxyXG5cdFx0Zm9yIChsZXQgYXR0ciBpbiB1cGRhdGVBdHRycykge1xyXG5cdFx0XHRsZXQgdmFsID0gdXBkYXRlQXR0cnNbYXR0cl1cclxuXHRcdFx0b2xkVm5vZGUuYXR0cnNbYXR0cl0gPSB2YWxcclxuXHRcdFx0Ly92YWzmmK9mYWxzZeOAgW51bGzjgIF1bmRlZmluZWTliJnnp7vpmaTlsZ7mgKdcclxuXHRcdFx0aWYgKHZhbCA9PT0gZmFsc2UgfHwgdmFsID09PSBudWxsIHx8IHZhbCA9PT0gdW5kZWZpbmVkKSB7XHJcblx0XHRcdFx0b2xkVm5vZGUuZWxtLnJlbW92ZUF0dHJpYnV0ZShhdHRyKVxyXG5cdFx0XHR9XHJcblx0XHRcdC8v5ZCm5YiZ6K6+572u5bGe5oCn5YC8XHJcblx0XHRcdGVsc2Uge1xyXG5cdFx0XHRcdC8v5bGe5oCn5YC85piO56Gu5Li6dHJ1ZeaXtu+8jOWImeebtOaOpeiuvue9ruWxnuaAp+iAjOS4jeiuvue9ruWAvFxyXG5cdFx0XHRcdGlmICh2YWwgPT09IHRydWUpIHtcclxuXHRcdFx0XHRcdHZhbCA9ICcnXHJcblx0XHRcdFx0fVxyXG5cdFx0XHRcdC8v5bGe5oCn5YC85Li65a+56LGh77yM5YiZ6L2s5Li65a2X56ym5LiyXHJcblx0XHRcdFx0aWYgKHR5cGVvZiB2YWwgPT09ICdvYmplY3QnKSB7XHJcblx0XHRcdFx0XHR2YWwgPSBKU09OLnN0cmluZ2lmeSh2YWwpXHJcblx0XHRcdFx0fVxyXG5cdFx0XHRcdC8v5YW25LuW5oOF5Ya155u05o6l6L2s5a2X56ym5LiyXHJcblx0XHRcdFx0dmFsID0gU3RyaW5nKHZhbClcclxuXHRcdFx0XHQvL+iuvue9ruWxnuaAp1xyXG5cdFx0XHRcdG9sZFZub2RlLmVsbS5zZXRBdHRyaWJ1dGUoYXR0ciwgdmFsKVxyXG5cdFx0XHR9XHJcblx0XHR9XHJcblx0XHQvL+iOt+WPluenu+mZpOeahOWxnuaAp1xyXG5cdFx0bGV0IHJlbW92ZUF0dHJzID0gbmV3Vm5vZGUuY29tcGFyZShvbGRWbm9kZSwgJ2F0dHJzJywgMilcclxuXHRcdC8v6L+b6KGM56e76Zmk5pON5L2cXHJcblx0XHRmb3IgKGxldCBhdHRyIGluIHJlbW92ZUF0dHJzKSB7XHJcblx0XHRcdGRlbGV0ZSBvbGRWbm9kZS5hdHRyc1thdHRyXVxyXG5cdFx0XHRvbGRWbm9kZS5lbG0ucmVtb3ZlQXR0cmlidXRlKGF0dHIpXHJcblx0XHR9XHJcblx0fVxyXG5cclxuXHQvKipcclxuXHQgKiDmm7TmlrDmoLflvI/nsbtcclxuXHQgKiBAcGFyYW0ge1ZOb2RlfSBuZXdWbm9kZVxyXG5cdCAqIEBwYXJhbSB7Vk5vZGV9IG9sZFZub2RlXHJcblx0ICovXHJcblx0X3VwZGF0ZUNsYXNzKG5ld1Zub2RlLCBvbGRWbm9kZSkge1xyXG5cdFx0Ly/moLflvI/lj5HnlJ/kuoblj5jljJZcclxuXHRcdGlmIChKU09OLnN0cmluZ2lmeShuZXdWbm9kZS5jbHMpICE9IEpTT04uc3RyaW5naWZ5KG9sZFZub2RlLmNscykpIHtcclxuXHRcdFx0b2xkVm5vZGUuY2xzID0gT2JqZWN0LmFzc2lnbih7fSwgbmV3Vm5vZGUuY2xzKVxyXG5cdFx0XHRsZXQgY2xzID0gW11cclxuXHRcdFx0Zm9yIChsZXQgaXRlbSBpbiBvbGRWbm9kZS5jbHMpIHtcclxuXHRcdFx0XHRpZiAob2xkVm5vZGUuY2xzW2l0ZW1dKSB7XHJcblx0XHRcdFx0XHRjbHMucHVzaChpdGVtKVxyXG5cdFx0XHRcdH1cclxuXHRcdFx0fVxyXG5cdFx0XHRpZiAoY2xzLmxlbmd0aCkge1xyXG5cdFx0XHRcdG9sZFZub2RlLmVsbS5zZXRBdHRyaWJ1dGUoJ2NsYXNzJywgY2xzLmpvaW4oJyAnKSlcclxuXHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHRvbGRWbm9kZS5lbG0ucmVtb3ZlQXR0cmlidXRlKCdjbGFzcycpXHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHR9XHJcblxyXG5cdC8qKlxyXG5cdCAqIOabtOaWsOS6i+S7tlxyXG5cdCAqIEBwYXJhbSB7Vk5vZGV9IG5ld1Zub2RlXHJcblx0ICogQHBhcmFtIHtWTm9kZX0gb2xkVm5vZGVcclxuXHQgKi9cclxuXHRfdXBkYXRlRXZlbnRzKG5ld1Zub2RlLCBvbGRWbm9kZSkge1xyXG5cdFx0Ly/ojrflj5bkv67mlLnnmoTkuovku7ZcclxuXHRcdGxldCB1cGRhdGVFdmVudHMgPSBuZXdWbm9kZS5jb21wYXJlKG9sZFZub2RlLCAnZXZlbnRzJywgMClcclxuXHRcdGZvciAobGV0IGV2ZW50TmFtZSBpbiB1cGRhdGVFdmVudHMpIHtcclxuXHRcdFx0b2xkVm5vZGUuZXZlbnRzW2V2ZW50TmFtZV0gPSB1cGRhdGVFdmVudHNbZXZlbnROYW1lXVxyXG5cdFx0fVxyXG5cdFx0Ly/ojrflj5bmlrDlop7nmoTkuovku7ZcclxuXHRcdGxldCBhZGRFdmVudHMgPSBuZXdWbm9kZS5jb21wYXJlKG9sZFZub2RlLCAnZXZlbnRzJywgMSlcclxuXHRcdGZvciAobGV0IGV2ZW50TmFtZSBpbiBhZGRFdmVudHMpIHtcclxuXHRcdFx0b2xkVm5vZGUuZXZlbnRzW2V2ZW50TmFtZV0gPSBhZGRFdmVudHNbZXZlbnROYW1lXVxyXG5cdFx0XHRvbGRWbm9kZS5lbG0uYWRkRXZlbnRMaXN0ZW5lcihldmVudE5hbWUsIGUgPT4ge1xyXG5cdFx0XHRcdC8vc2VsZuS/rumlsOesplxyXG5cdFx0XHRcdGlmIChvbGRWbm9kZS5ldmVudHNbZXZlbnROYW1lXS5tb2RpZmllciAmJiBvbGRWbm9kZS5ldmVudHNbZXZlbnROYW1lXS5tb2RpZmllci5pbmNsdWRlcyhcclxuXHRcdFx0XHRcdFx0J3NlbGYnKSkge1xyXG5cdFx0XHRcdFx0aWYgKGUuY3VycmVudFRhcmdldCAhPSBlLnRhcmdldCkge1xyXG5cdFx0XHRcdFx0XHRyZXR1cm5cclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHR9XHJcblx0XHRcdFx0Ly9zdG9w5L+u6aWw56ymXHJcblx0XHRcdFx0aWYgKG9sZFZub2RlLmV2ZW50c1tldmVudE5hbWVdLm1vZGlmaWVyICYmIG9sZFZub2RlLmV2ZW50c1tldmVudE5hbWVdLm1vZGlmaWVyLmluY2x1ZGVzKFxyXG5cdFx0XHRcdFx0XHQnc3RvcCcpKSB7XHJcblx0XHRcdFx0XHRlLnN0b3BQcm9wYWdhdGlvbigpXHJcblx0XHRcdFx0fVxyXG5cdFx0XHRcdC8vcHJldmVudOS/rumlsOesplxyXG5cdFx0XHRcdGlmIChvbGRWbm9kZS5ldmVudHNbZXZlbnROYW1lXS5tb2RpZmllciAmJiBvbGRWbm9kZS5ldmVudHNbZXZlbnROYW1lXS5tb2RpZmllci5pbmNsdWRlcyhcclxuXHRcdFx0XHRcdFx0J3ByZXZlbnQnKSAmJiBlLmNhbmNlbGFibGUpIHtcclxuXHRcdFx0XHRcdGUucHJldmVudERlZmF1bHQoKVxyXG5cdFx0XHRcdH1cclxuXHRcdFx0XHQvL+aJp+ihjOS6i+S7tuWHveaVsFxyXG5cdFx0XHRcdGlmICh0eXBlb2Ygb2xkVm5vZGUuZXZlbnRzW2V2ZW50TmFtZV0uaGFuZGxlciA9PSAnZnVuY3Rpb24nKSB7XHJcblx0XHRcdFx0XHQvL+S6i+S7tuWbnuiwg+WPguaVsOesrOS4gOS4quawuOi/nOWbuuWumuS4umV2ZW5077yM5ZCO6Z2i5YiZ5piv5a6a5LmJ55qE5Y+C5pWwXHJcblx0XHRcdFx0XHRvbGRWbm9kZS5ldmVudHNbZXZlbnROYW1lXS5oYW5kbGVyLmFwcGx5KHRoaXMuJGRhdGEsIFtlLCAuLi5vbGRWbm9kZS5ldmVudHNbZXZlbnROYW1lXVxyXG5cdFx0XHRcdFx0XHQucGFyYW1zXHJcblx0XHRcdFx0XHRdKVxyXG5cdFx0XHRcdH0gZWxzZSB7XHJcblx0XHRcdFx0XHRsZXQgaCA9IG9sZFZub2RlLmV4ZWN1dGVFeHByZXNzaW9uKHRoaXMuJGRhdGEsIG9sZFZub2RlLmV2ZW50c1tldmVudE5hbWVdLmhhbmRsZXIpXHJcblx0XHRcdFx0XHRoKHRoaXMuJGRhdGEpXHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9LCB7XHJcblx0XHRcdFx0b25jZTogb2xkVm5vZGUuZXZlbnRzW2V2ZW50TmFtZV0ubW9kaWZpZXIgJiYgb2xkVm5vZGUuZXZlbnRzW2V2ZW50TmFtZV0ubW9kaWZpZXIuaW5jbHVkZXMoXHJcblx0XHRcdFx0XHQnb25jZScpLFxyXG5cdFx0XHRcdGNhcHR1cmU6IG9sZFZub2RlLmV2ZW50c1tldmVudE5hbWVdLm1vZGlmaWVyICYmIG9sZFZub2RlLmV2ZW50c1tldmVudE5hbWVdLm1vZGlmaWVyXHJcblx0XHRcdFx0XHQuaW5jbHVkZXMoJ2NhcHR1cmUnKSxcclxuXHRcdFx0XHRwYXNzaXZlOiBvbGRWbm9kZS5ldmVudHNbZXZlbnROYW1lXS5tb2RpZmllciAmJiBvbGRWbm9kZS5ldmVudHNbZXZlbnROYW1lXS5tb2RpZmllclxyXG5cdFx0XHRcdFx0LmluY2x1ZGVzKCdwYXNzaXZlJylcclxuXHRcdFx0fSlcclxuXHRcdH1cclxuXHR9XHJcblxyXG5cdC8qKlxyXG5cdCAqIOabtOaWsOWtkOiKgueCuVxyXG5cdCAqIEBwYXJhbSB7Vk5vZGV9IG5ld1Zub2RlXHJcblx0ICogQHBhcmFtIHtWTm9kZX0gb2xkVm5vZGVcclxuXHQgKi9cclxuXHRfdXBkYXRlQ2hpbGRyZW4obmV3Vm5vZGUsIG9sZFZub2RlKSB7XHJcblx0XHQvL+WtkOiKgueCueaVsOebruS4gOiHtFxyXG5cdFx0aWYgKG5ld1Zub2RlLmNoaWxkcmVuLmxlbmd0aCA9PSBvbGRWbm9kZS5jaGlsZHJlbi5sZW5ndGgpIHtcclxuXHRcdFx0Ly/pgJLlvZLmr5TovoPlrZDoioLngrlcclxuXHRcdFx0Zm9yIChsZXQgbmNoaWxkIG9mIG5ld1Zub2RlLmNoaWxkcmVuKSB7XHJcblx0XHRcdFx0Zm9yIChsZXQgb2NoaWxkIG9mIG9sZFZub2RlLmNoaWxkcmVuKSB7XHJcblx0XHRcdFx0XHQvL+aWsOaXp+iKgueCueagkeS4reWPquacieWQjOetiWlk55qE6IqC54K55omN5Lya6KKr5q+U6L6DXHJcblx0XHRcdFx0XHRpZiAobmNoaWxkLmlkID09PSBvY2hpbGQuaWQpIHtcclxuXHRcdFx0XHRcdFx0dGhpcy5fdXBkYXRlVm5vZGUobmNoaWxkLCBvY2hpbGQpXHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9XHJcblx0XHR9XHJcblx0XHQvL+WtkOiKgueCueaVsOebruS4jeS4gOiHtO+8jOebtOaOpeabtOaWsOWtkOiKgueCueaVsOe7hO+8jOW5tuS4lOabtOaWsGRvbVxyXG5cdFx0ZWxzZSB7XHJcblx0XHRcdG9sZFZub2RlLmNoaWxkcmVuLmZvckVhY2goY2hpbGRWbm9kZSA9PiB7XHJcblx0XHRcdFx0Ly/op6blj5Hoh6rlrprkuYnmjIfku6TnmoRiZWZvcmVNb3VudFxyXG5cdFx0XHRcdGNoaWxkVm5vZGUuZGVhbERpcmVjdGl2ZXModGhpcywgJ2JlZm9yZVVubW91bnQnKVxyXG5cdFx0XHR9KVxyXG5cdFx0XHRvbGRWbm9kZS5lbG0uaW5uZXJIVE1MID0gJydcclxuXHRcdFx0b2xkVm5vZGUuY2hpbGRyZW4uZm9yRWFjaChjaGlsZFZub2RlID0+IHtcclxuXHRcdFx0XHQvL+inpuWPkeiHquWumuS5ieaMh+S7pOeahHVubW91bnRlZFxyXG5cdFx0XHRcdGNoaWxkVm5vZGUuZGVhbERpcmVjdGl2ZXModGhpcywgJ3VubW91bnRlZCcpXHJcblx0XHRcdH0pXHJcblx0XHRcdG9sZFZub2RlLmNoaWxkcmVuID0gW11cclxuXHRcdFx0bmV3Vm5vZGUuY2hpbGRyZW4uZm9yRWFjaChjaGlsZFZub2RlID0+IHtcclxuXHRcdFx0XHRsZXQgY29weUNoaWxkID0gY2hpbGRWbm9kZS5jb3B5KClcclxuXHRcdFx0XHRvbGRWbm9kZS5jaGlsZHJlbi5wdXNoKGNvcHlDaGlsZClcclxuXHRcdFx0XHQvL+inpuWPkeiHquWumuS5ieaMh+S7pOeahGJlZm9yZU1vdW50XHJcblx0XHRcdFx0Y29weUNoaWxkLmRlYWxEaXJlY3RpdmVzKHRoaXMsICdiZWZvcmVNb3VudCcpXHJcblx0XHRcdFx0Y29weUNoaWxkLnJlbmRlcih0aGlzKVxyXG5cdFx0XHRcdC8v5o+S5YWl5YWD57SgXHJcblx0XHRcdFx0b2xkVm5vZGUuZWxtLmFwcGVuZENoaWxkKGNvcHlDaGlsZC5lbG0pXHJcblx0XHRcdFx0Ly/op6blj5Hoh6rlrprkuYnmjIfku6TnmoRtb3VudGVkXHJcblx0XHRcdFx0Y29weUNoaWxkLmRlYWxEaXJlY3RpdmVzKHRoaXMsICdtb3VudGVkJylcclxuXHRcdFx0fSlcclxuXHRcdH1cclxuXHR9XHJcblxyXG5cdC8qKlxyXG5cdCAqIOabtOaWsOaWh+Wtl1xyXG5cdCAqIEBwYXJhbSB7Vk5vZGV9IG5ld1Zub2RlXHJcblx0ICogQHBhcmFtIHtWTm9kZX0gb2xkVm5vZGVcclxuXHQgKi9cclxuXHRfdXBkYXRlVGV4dChuZXdWbm9kZSwgb2xkVm5vZGUpIHtcclxuXHRcdGlmIChuZXdWbm9kZS50ZXh0ICE9PSBvbGRWbm9kZS50ZXh0KSB7XHJcblx0XHRcdG9sZFZub2RlLnRleHQgPSBuZXdWbm9kZS50ZXh0XHJcblx0XHRcdG9sZFZub2RlLmVsbS5ub2RlVmFsdWUgPSBvbGRWbm9kZS50ZXh0XHJcblx0XHR9XHJcblx0fVxyXG5cclxuXHJcblx0Ly8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcblx0Ly/ku6XkuIvmlrnms5XmmK/lrp7njrDmlbDmja7ku6PnkIblkozlj5jmm7Tnm5HlkKznmoRcclxuXHQvLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuXHJcblx0LyoqXHJcblx0ICog5a+55aSW5o+Q5L6b55qE6L+b6KGM55uR5ZCs55qE5pa55rOVXHJcblx0ICogQHBhcmFtIHtTdHJpbmd9IHByb3BlcnR5IOebkeWQrOWxnuaAp1xyXG5cdCAqIEBwYXJhbSB7RnVuY3Rpb259IGhhbmRsZXIg55uR5ZCs5Ye95pWwXHJcblx0ICovXHJcblx0d2F0Y2gocHJvcGVydHksIGhhbmRsZXIpIHtcclxuXHRcdC8v55uR5ZCs55qE5bGe5oCn5pyq5a6a5LmJ5oql6ZSZXHJcblx0XHRpZiAoIXByb3BlcnR5KSB7XHJcblx0XHRcdHRocm93IG5ldyBUeXBlRXJyb3IoJ1lvdSBtdXN0IHNwZWNpZnkgYSBwcm9wZXJ0eSB0byB3YXRjaCcpXHJcblx0XHR9XHJcblx0XHQvL+ebkeWQrOeahOWxnuaAp+S4jeaYr+Wtl+espuS4slxyXG5cdFx0aWYgKHR5cGVvZiBwcm9wZXJ0eSAhPSAnc3RyaW5nJykge1xyXG5cdFx0XHR0aHJvdyBuZXcgVHlwZUVycm9yKCdUaGUgd2F0Y2ggcHJvcGVydHkgZXhwZWN0ZWQgYSBzdHJpbmcnKVxyXG5cdFx0fVxyXG5cdFx0Ly/lpoLmnpznm5HlkKzlh73mlbDpnZ7lh73mlbDnsbvlnovpu5jorqTkuLrnqbrlh73mlbBcclxuXHRcdGlmICh0eXBlb2YgaGFuZGxlciAhPSAnZnVuY3Rpb24nKSB7XHJcblx0XHRcdGhhbmRsZXIgPSBmdW5jdGlvbigpIHt9XHJcblx0XHR9XHJcblx0XHQvL+WwhuebkeWQrOWxnuaAp+Wtl+espuS4suino+aekOaIkOeJueWumuW9ouW8j+eahOaWsOWtl+espuS4suS9nOS4umtleVxyXG5cdFx0Y29uc3Qga2V5ID0gdGhpcy5fcGFyc2VQcm9wZXJ0eShwcm9wZXJ0eSlcclxuXHRcdC8v54m55a6a5bGe5oCn55qE55uR5ZCs5bey5a2Y5ZyoXHJcblx0XHRpZiAodGhpcy4kd2F0Y2hlcnNba2V5XSkge1xyXG5cdFx0XHR0aHJvdyBuZXcgRXJyb3IoJ1RoZSB3YXRjaGVyIGZvciBcIicgKyBwcm9wZXJ0eSArICdcIiBpcyBhbHJlYWR5IGRlZmluZWQnKVxyXG5cdFx0fVxyXG5cdFx0Ly/ms6jlhozor6Xnm5HlkKxcclxuXHRcdHRoaXMuJHdhdGNoZXJzW2tleV0gPSBoYW5kbGVyXHJcblx0XHQvL+i/lOWbnuivpeWunuS+i1xyXG5cdFx0cmV0dXJuIHRoaXNcclxuXHR9XHJcblxyXG5cdC8qKlxyXG5cdCAqIOino+mZpOebkeWQrFxyXG5cdCAqIEBwYXJhbSB7U3RyaW5nfSBwcm9wZXJ0eSDnm5HlkKznmoTlsZ7mgKdcclxuXHQgKi9cclxuXHR1bndhdGNoKHByb3BlcnR5KSB7XHJcblx0XHQvL+ino+mZpOivpeWxnuaAp+ebkeWQrFxyXG5cdFx0aWYgKHR5cGVvZiBwcm9wZXJ0eSA9PSAnc3RyaW5nJykge1xyXG5cdFx0XHQvL+WwhuebkeWQrOWxnuaAp+Wtl+espuS4suino+aekOeUn+aIkOeCuemXtOmalOespueahOaWsOWtl+espuS4suS9nOS4uuWtmOWCqOebkeWQrOWZqOeahGtleVxyXG5cdFx0XHRjb25zdCBrZXkgPSB0aGlzLl9wYXJzZVByb3BlcnR5KHByb3BlcnR5KVxyXG5cdFx0XHQvL+WmguaenOWtmOWcqOivpWtleeeahOebkeWQrOWZqOWImei/m+ihjOenu+mZpFxyXG5cdFx0XHRpZiAodGhpcy4kd2F0Y2hlcnNba2V5XSkge1xyXG5cdFx0XHRcdGRlbGV0ZSB0aGlzLiR3YXRjaGVyc1trZXldXHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHRcdC8v6Kej6Zmk5YWo6YOo55uR5ZCsXHJcblx0XHRlbHNlIHtcclxuXHRcdFx0dGhpcy4kd2F0Y2hlcnMgPSB7fVxyXG5cdFx0fVxyXG5cdFx0Ly/ov5Tlm57or6Xlrp7kvotcclxuXHRcdHJldHVybiB0aGlzXHJcblx0fVxyXG5cclxuXHQvKipcclxuXHQgKiDlsIbmma7pgJrlr7nosaHovazkuLpwcm94eeWvueixoVxyXG5cdCAqIEBwYXJhbSB7QXJyYXl9IHBhcmVudEtleXMg5YC85Li65a+56LGh55qE5YWD57Sg5LiK57qn54i25bGe5oCn5pWw57uEXHJcblx0ICogQHBhcmFtIHtPYmplY3R9IGRhdGEg5rqQ5pWw5o2u5a+56LGhXHJcblx0ICogQHBhcmFtIHtTdHJpbmd9IHBhcmVudEtleSDlgLzkuLrlr7nosaHnmoTlhYPntKDlsZ7mgKflkI3np7BcclxuXHQgKi9cclxuXHRfdG9Qcm94eShwYXJlbnRLZXlzLCBkYXRhLCBwYXJlbnRLZXkpIHtcclxuXHRcdGxldCBrZXlzID0gWy4uLnBhcmVudEtleXNdXHJcblx0XHRpZiAoIXRoaXMuX2lzT2JqZWN0KGRhdGEpKSB7XHJcblx0XHRcdHRocm93IG5ldyBUeXBlRXJyb3IoJ0Nhbm5vdCBjcmVhdGUgcHJveHkgd2l0aCBhIG5vbi1vYmplY3QgYXMgdGFyZ2V0IG9yIGhhbmRsZXInKVxyXG5cdFx0fVxyXG5cdFx0aWYgKHBhcmVudEtleSkge1xyXG5cdFx0XHRrZXlzLnB1c2gocGFyZW50S2V5KVxyXG5cdFx0fVxyXG5cdFx0Ly/pgY3ljoZkYXRh55qE5bGe5oCnXHJcblx0XHRmb3IgKGxldCBrZXkgaW4gZGF0YSkge1xyXG5cdFx0XHQvL+WxnuaAp+WAvOS4uuWvueixoeeahOWImeWGjeasoei9rOS4unByb3h55a+56LGhXHJcblx0XHRcdGlmICh0aGlzLl9pc09iamVjdChkYXRhW2tleV0pKSB7XHJcblx0XHRcdFx0ZGF0YVtrZXldID0gdGhpcy5fdG9Qcm94eShrZXlzLCBkYXRhW2tleV0sIGtleSlcclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cdFx0Y29uc3QgaGFuZGxlciA9IHtcclxuXHRcdFx0Z2V0OiAodGFyZ2V0LCBwcm9wZXJ0eSkgPT4ge1xyXG5cdFx0XHRcdHJldHVybiB0aGlzLl9nZXR0ZXIoa2V5cywgdGFyZ2V0LCBwcm9wZXJ0eSlcclxuXHRcdFx0fSxcclxuXHRcdFx0c2V0OiAodGFyZ2V0LCBwcm9wZXJ0eSwgdmFsdWUpID0+IHtcclxuXHRcdFx0XHRyZXR1cm4gdGhpcy5fc2V0dGVyKGtleXMsIHRhcmdldCwgcHJvcGVydHksIHZhbHVlKVxyXG5cdFx0XHR9LFxyXG5cdFx0XHRkZWxldGVQcm9wZXJ0eTogKHRhcmdldCwgcHJvcGVydHkpID0+IHtcclxuXHRcdFx0XHRyZXR1cm4gdGhpcy5fc2V0dGVyKGtleXMsIHRhcmdldCwgcHJvcGVydHksIHVuZGVmaW5lZClcclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cdFx0cmV0dXJuIG5ldyBQcm94eShkYXRhLCBoYW5kbGVyKVxyXG5cdH1cclxuXHJcblx0LyoqXHJcblx0ICog6I635Y+W5bGe5oCn5YC855uR5ZCsXHJcblx0ICogQHBhcmFtIHtBcnJheX0gcGFyZW50S2V5cyDniLblsZ7mgKfmlbDnu4RcclxuXHQgKiBAcGFyYW0ge09iamVjdH0gdGFyZ2V0ICDnm67moIflr7nosaFcclxuXHQgKiBAcGFyYW0ge1N0cmluZ30gcHJvcGVydHkg55uu5qCH5a+56LGh55qE5bGe5oCnXHJcblx0ICovXHJcblx0X2dldHRlcihwYXJlbnRLZXlzLCB0YXJnZXQsIHByb3BlcnR5KSB7XHJcblx0XHRyZXR1cm4gUmVmbGVjdC5nZXQodGFyZ2V0LCBwcm9wZXJ0eSlcclxuXHR9XHJcblxyXG5cdC8qKlxyXG5cdCAqIOiuvue9ruWxnuaAp+WAvOebkeWQrFxyXG5cdCAqIEBwYXJhbSB7QXJyYXl9IHBhcmVudEtleXMg54i25bGe5oCn5pWw57uEXHJcblx0ICogQHBhcmFtIHtPYmplY3R9IHRhcmdldCDnm67moIflr7nosaFcclxuXHQgKiBAcGFyYW0ge1N0cmluZ30gcHJvcGVydHkg5bGe5oCnXHJcblx0ICogQHBhcmFtIHtPYmplY3R9IHZhbHVlICDlsZ7mgKflgLxcclxuXHQgKi9cclxuXHRfc2V0dGVyKHBhcmVudEtleXMsIHRhcmdldCwgcHJvcGVydHksIHZhbHVlKSB7XHJcblx0XHQvL+eItuWxnuaAp+aVsOe7hOabtOaWsFxyXG5cdFx0bGV0IGtleXMgPSBbLi4ucGFyZW50S2V5c11cclxuXHRcdGtleXMucHVzaChwcm9wZXJ0eSlcclxuXHRcdC8v6K6w5b2V5pen55qEdGFyZ2V0XHJcblx0XHRsZXQgb2xkVGFyZ2V0ID0gbnVsbFxyXG5cdFx0aWYgKEFycmF5LmlzQXJyYXkodGFyZ2V0KSkge1xyXG5cdFx0XHRvbGRUYXJnZXQgPSBbLi4udGFyZ2V0XVxyXG5cdFx0fSBlbHNlIGlmICh0eXBlb2YgdGFyZ2V0ID09ICdvYmplY3QnKSB7XHJcblx0XHRcdG9sZFRhcmdldCA9IE9iamVjdC5hc3NpZ24oe30sIHRhcmdldClcclxuXHRcdH1cclxuXHRcdC8v6K6w5b2V5pen55qEdmFsdWVcclxuXHRcdGxldCBvbGRWYWx1ZSA9IHRhcmdldFtwcm9wZXJ0eV1cclxuXHRcdGlmIChBcnJheS5pc0FycmF5KG9sZFZhbHVlKSkge1xyXG5cdFx0XHRvbGRWYWx1ZSA9IFsuLi5vbGRWYWx1ZV1cclxuXHRcdH0gZWxzZSBpZiAodHlwZW9mIG9sZFZhbHVlID09ICdvYmplY3QnICYmIG9sZFZhbHVlKSB7XHJcblx0XHRcdG9sZFZhbHVlID0gT2JqZWN0LmFzc2lnbih7fSwgb2xkVmFsdWUpXHJcblx0XHR9XHJcblx0XHQvL+iuvue9ruWAvFxyXG5cdFx0UmVmbGVjdC5zZXQodGFyZ2V0LCBwcm9wZXJ0eSwgdmFsdWUpXHJcblx0XHQvL+WmguaenOWxnuaAp+WPmOWMllxyXG5cdFx0aWYgKG9sZFZhbHVlICE9PSB2YWx1ZSkge1xyXG5cdFx0XHQvL+inpuWPkWJlZm9yZVVwZGF0ZeeUn+WRveWRqOacn+WHveaVsFxyXG5cdFx0XHRpZiAodHlwZW9mIHRoaXMub25CZWZvcmVVcGRhdGUgPT0gJ2Z1bmN0aW9uJykge1xyXG5cdFx0XHRcdHRoaXMub25CZWZvcmVVcGRhdGUuYXBwbHkodGhpcy4kZGF0YSwgW3Byb3BlcnR5LCB2YWx1ZSwgb2xkVmFsdWUsIHRhcmdldF0pXHJcblx0XHRcdH1cclxuXHRcdFx0Ly/mm7TmlrDomZrmi5/oioLngrlcclxuXHRcdFx0dGhpcy5fdXBkYXRlVm5vZGVzKGtleXMsIHZhbHVlLCBvbGRWYWx1ZSlcclxuXHRcdFx0Ly/pkojlr7nkv67mlLnlr7nosaHmiJbogIXmlbDnu4TlhoXpg6jlhYPntKDvvIzop6blj5Hlr7nmlbDnu4TmiJbogIXlr7nosaHnmoTnm5HlkKxcclxuXHRcdFx0Y29uc3Qga2V5MSA9IHBhcmVudEtleXMuam9pbignLicpXHJcblx0XHRcdGlmIChvbGRUYXJnZXQgJiYgcGFyZW50S2V5cy5sZW5ndGggJiYgdGhpcy4kd2F0Y2hlcnNba2V5MV0pIHtcclxuXHRcdFx0XHR0aGlzLiR3YXRjaGVyc1trZXkxXS5hcHBseSh0aGlzLCBbdGFyZ2V0LCBvbGRUYXJnZXRdKVxyXG5cdFx0XHR9XHJcblx0XHRcdC8v6ZKI5a+555u05o6l5bGe5oCn6Kem5Y+R55uR5ZCsXHJcblx0XHRcdGNvbnN0IGtleTIgPSBrZXlzLmpvaW4oJy4nKVxyXG5cdFx0XHRpZiAodGhpcy4kd2F0Y2hlcnNba2V5Ml0pIHtcclxuXHRcdFx0XHR0aGlzLiR3YXRjaGVyc1trZXkyXS5hcHBseSh0aGlzLCBbdmFsdWUsIG9sZFZhbHVlXSlcclxuXHRcdFx0fVxyXG5cdFx0XHQvL+inpuWPkXVwZGF0ZWTnlJ/lkb3lkajmnJ/lh73mlbBcclxuXHRcdFx0aWYgKHR5cGVvZiB0aGlzLm9uVXBkYXRlZCA9PSAnZnVuY3Rpb24nKSB7XHJcblx0XHRcdFx0dGhpcy5vblVwZGF0ZWQuYXBwbHkodGhpcy4kZGF0YSwgW3Byb3BlcnR5LCB2YWx1ZSwgb2xkVmFsdWUsIHRhcmdldF0pXHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHRcdHJldHVybiB0cnVlXHJcblx0fVxyXG5cclxuXHQvKipcclxuXHQgKiDop6PmnpDmjIflrprnmoTnm5HlkKzlsZ7mgKflrZfnrKbkuLLkuLrnibnlrprmoLzlvI/lrZfnrKbkuLJcclxuXHQgKiBAcGFyYW0ge1N0cmluZ30gcHJvcGVydHkg6Kej5p6Q55qE5bGe5oCn5a2X56ym5LiyXHJcblx0ICovXHJcblx0X3BhcnNlUHJvcGVydHkocHJvcGVydHkpIHtcclxuXHRcdGxldCBwcm9wZXJ0aWVzID0gW11cclxuXHRcdHByb3BlcnR5LnNwbGl0KCcuJykuZm9yRWFjaChwcm9wID0+IHtcclxuXHRcdFx0Y29uc3QgbWF0Y2hBcnJheSA9IHByb3AubWF0Y2goL1xcWyguKz8pXFxdL2cpXHJcblx0XHRcdGlmIChtYXRjaEFycmF5KSB7XHJcblx0XHRcdFx0bGV0IG5ld1Byb3AgPSBwcm9wLnJlcGxhY2UoL1xcWyguKz8pXFxdL2csICcnKVxyXG5cdFx0XHRcdHByb3BlcnRpZXMucHVzaChuZXdQcm9wKVxyXG5cdFx0XHRcdG1hdGNoQXJyYXkuZm9yRWFjaChtYXRjaCA9PiB7XHJcblx0XHRcdFx0XHRwcm9wZXJ0aWVzLnB1c2gobWF0Y2guc3Vic3RyKDEsIG1hdGNoLmxlbmd0aCAtIDIpKVxyXG5cdFx0XHRcdH0pXHJcblx0XHRcdH0gZWxzZSB7XHJcblx0XHRcdFx0cHJvcGVydGllcy5wdXNoKHByb3ApXHJcblx0XHRcdH1cclxuXHRcdH0pXHJcblx0XHRyZXR1cm4gcHJvcGVydGllcy5qb2luKCcuJylcclxuXHR9XHJcblxyXG5cdC8qKlxyXG5cdCAqIOWIpOaWreaVsOaNruaYr+WQpuS4uuWvueixoVxyXG5cdCAqIEBwYXJhbSB7T2JqZWN0fSBkYXRhXHJcblx0ICovXHJcblx0X2lzT2JqZWN0KGRhdGEpIHtcclxuXHRcdGlmICh0eXBlb2YgZGF0YSA9PSAnb2JqZWN0JyAmJiBkYXRhKSB7XHJcblx0XHRcdHJldHVybiB0cnVlXHJcblx0XHR9XHJcblx0XHRyZXR1cm4gZmFsc2VcclxuXHR9XHJcblxyXG59XHJcblxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBTdGF0ZVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///2\n")},function(module,exports,__webpack_require__){"use strict";eval("\n\nmodule.exports = {\n\t//定义show指令\n\tshow: {\n\t\tmounted: function mounted(el, value) {\n\t\t\tif (!value) {\n\t\t\t\tel.style.display = 'none';\n\t\t\t}\n\t\t},\n\t\tupdated: function updated(el, value) {\n\t\t\tif (value) {\n\t\t\t\tel.style.display = '';\n\t\t\t} else {\n\t\t\t\tel.style.display = 'none';\n\t\t\t}\n\t\t}\n\t},\n\tmodel: {\n\t\tmounted: function mounted(el, value, modifier, exp, vnode) {\n\t\t\t//input标签的双向绑定\n\t\t\tif (el.nodeName == 'INPUT') {\n\t\t\t\t//复选框实现双向绑定\n\t\t\t\tif (el.getAttribute('type') == 'checkbox') {\n\t\t\t\t\t//布尔类型\n\t\t\t\t\tif (typeof value == 'boolean') {\n\t\t\t\t\t\tif (value) {\n\t\t\t\t\t\t\tel.setAttribute('checked', '');\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tel.removeAttribute('checked');\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (Array.isArray(value)) {\n\t\t\t\t\t\tvar val = vnode.attrs.value;\n\t\t\t\t\t\tif (value.includes(val)) {\n\t\t\t\t\t\t\tel.setAttribute('checked', '');\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tel.removeAttribute('checked');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tel.addEventListener('change', function (e) {\n\t\t\t\t\t\tvar isChecked = e.currentTarget.checked;\n\t\t\t\t\t\t//布尔类型\n\t\t\t\t\t\tif (typeof value == 'boolean') {} else if (Array.isArray(value)) {\n\t\t\t\t\t\t\tvar _val = vnode.attrs.value;\n\t\t\t\t\t\t\tif (value.includes(_val)) {\n\t\t\t\t\t\t\t\tel.setAttribute('checked', '');\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tel.removeAttribute('checked');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tupdated: function updated(el, value, modifier, exp, vnode) {\n\t\t\t//input标签的双向绑定\n\t\t\tif (el.nodeName == 'INPUT') {\n\t\t\t\t//复选框实现双向绑定\n\t\t\t\tif (el.getAttribute('type') == 'checkbox') {\n\t\t\t\t\t//布尔类型\n\t\t\t\t\tif (typeof value == 'boolean') {\n\t\t\t\t\t\tif (value) {\n\t\t\t\t\t\t\tel.setAttribute('checked', '');\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tel.removeAttribute('checked');\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (Array.isArray(value)) {\n\t\t\t\t\t\tvar val = vnode.attrs.value;\n\t\t\t\t\t\tif (value.includes(val)) {\n\t\t\t\t\t\t\tel.setAttribute('checked', '');\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tel.removeAttribute('checked');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9SZWZleC8uL3NyYy9jdXN0b20tZGlyZWN0aXZlcy5qcz9hNGE4Il0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJzaG93IiwibW91bnRlZCIsImVsIiwidmFsdWUiLCJzdHlsZSIsImRpc3BsYXkiLCJ1cGRhdGVkIiwibW9kZWwiLCJtb2RpZmllciIsImV4cCIsInZub2RlIiwibm9kZU5hbWUiLCJnZXRBdHRyaWJ1dGUiLCJzZXRBdHRyaWJ1dGUiLCJyZW1vdmVBdHRyaWJ1dGUiLCJBcnJheSIsImlzQXJyYXkiLCJ2YWwiLCJhdHRycyIsImluY2x1ZGVzIiwiYWRkRXZlbnRMaXN0ZW5lciIsImlzQ2hlY2tlZCIsImUiLCJjdXJyZW50VGFyZ2V0IiwiY2hlY2tlZCJdLCJtYXBwaW5ncyI6Ijs7QUFBQUEsT0FBT0MsT0FBUCxHQUFpQjtBQUNoQjtBQUNBQyxPQUFNO0FBQ0xDLFdBQVMsaUJBQVNDLEVBQVQsRUFBYUMsS0FBYixFQUFvQjtBQUM1QixPQUFJLENBQUNBLEtBQUwsRUFBWTtBQUNYRCxPQUFHRSxLQUFILENBQVNDLE9BQVQsR0FBbUIsTUFBbkI7QUFDQTtBQUNELEdBTEk7QUFNTEMsV0FBUyxpQkFBU0osRUFBVCxFQUFhQyxLQUFiLEVBQW9CO0FBQzVCLE9BQUlBLEtBQUosRUFBVztBQUNWRCxPQUFHRSxLQUFILENBQVNDLE9BQVQsR0FBbUIsRUFBbkI7QUFDQSxJQUZELE1BRU87QUFDTkgsT0FBR0UsS0FBSCxDQUFTQyxPQUFULEdBQW1CLE1BQW5CO0FBQ0E7QUFDRDtBQVpJLEVBRlU7QUFnQmhCRSxRQUFPO0FBQ05OLFdBQVMsaUJBQVNDLEVBQVQsRUFBYUMsS0FBYixFQUFvQkssUUFBcEIsRUFBOEJDLEdBQTlCLEVBQW1DQyxLQUFuQyxFQUEwQztBQUNsRDtBQUNBLE9BQUlSLEdBQUdTLFFBQUgsSUFBZSxPQUFuQixFQUE0QjtBQUMzQjtBQUNBLFFBQUdULEdBQUdVLFlBQUgsQ0FBZ0IsTUFBaEIsS0FBMkIsVUFBOUIsRUFBeUM7QUFDeEM7QUFDQSxTQUFHLE9BQU9ULEtBQVAsSUFBZ0IsU0FBbkIsRUFBNkI7QUFDNUIsVUFBR0EsS0FBSCxFQUFTO0FBQ1JELFVBQUdXLFlBQUgsQ0FBZ0IsU0FBaEIsRUFBMEIsRUFBMUI7QUFDQSxPQUZELE1BRU07QUFDTFgsVUFBR1ksZUFBSCxDQUFtQixTQUFuQjtBQUNBO0FBQ0QsTUFORCxNQU1NLElBQUdDLE1BQU1DLE9BQU4sQ0FBY2IsS0FBZCxDQUFILEVBQXdCO0FBQzdCLFVBQUljLE1BQU1QLE1BQU1RLEtBQU4sQ0FBWWYsS0FBdEI7QUFDQSxVQUFHQSxNQUFNZ0IsUUFBTixDQUFlRixHQUFmLENBQUgsRUFBdUI7QUFDdEJmLFVBQUdXLFlBQUgsQ0FBZ0IsU0FBaEIsRUFBMEIsRUFBMUI7QUFDQSxPQUZELE1BRU07QUFDTFgsVUFBR1ksZUFBSCxDQUFtQixTQUFuQjtBQUNBO0FBQ0Q7QUFDRFosUUFBR2tCLGdCQUFILENBQW9CLFFBQXBCLEVBQTZCLGFBQUc7QUFDL0IsVUFBSUMsWUFBWUMsRUFBRUMsYUFBRixDQUFnQkMsT0FBaEM7QUFDQTtBQUNBLFVBQUcsT0FBT3JCLEtBQVAsSUFBZ0IsU0FBbkIsRUFBNkIsQ0FFNUIsQ0FGRCxNQUVNLElBQUdZLE1BQU1DLE9BQU4sQ0FBY2IsS0FBZCxDQUFILEVBQXdCO0FBQzdCLFdBQUljLE9BQU1QLE1BQU1RLEtBQU4sQ0FBWWYsS0FBdEI7QUFDQSxXQUFHQSxNQUFNZ0IsUUFBTixDQUFlRixJQUFmLENBQUgsRUFBdUI7QUFDdEJmLFdBQUdXLFlBQUgsQ0FBZ0IsU0FBaEIsRUFBMEIsRUFBMUI7QUFDQSxRQUZELE1BRU07QUFDTFgsV0FBR1ksZUFBSCxDQUFtQixTQUFuQjtBQUNBO0FBQ0Q7QUFDRCxNQWJEO0FBY0E7QUFDRDtBQUNELEdBckNLO0FBc0NOUixXQUFRLGlCQUFTSixFQUFULEVBQWFDLEtBQWIsRUFBb0JLLFFBQXBCLEVBQThCQyxHQUE5QixFQUFtQ0MsS0FBbkMsRUFBeUM7QUFDaEQ7QUFDQSxPQUFJUixHQUFHUyxRQUFILElBQWUsT0FBbkIsRUFBNEI7QUFDM0I7QUFDQSxRQUFHVCxHQUFHVSxZQUFILENBQWdCLE1BQWhCLEtBQTJCLFVBQTlCLEVBQXlDO0FBQ3hDO0FBQ0EsU0FBRyxPQUFPVCxLQUFQLElBQWdCLFNBQW5CLEVBQTZCO0FBQzVCLFVBQUdBLEtBQUgsRUFBUztBQUNSRCxVQUFHVyxZQUFILENBQWdCLFNBQWhCLEVBQTBCLEVBQTFCO0FBQ0EsT0FGRCxNQUVNO0FBQ0xYLFVBQUdZLGVBQUgsQ0FBbUIsU0FBbkI7QUFDQTtBQUNELE1BTkQsTUFNTSxJQUFHQyxNQUFNQyxPQUFOLENBQWNiLEtBQWQsQ0FBSCxFQUF3QjtBQUM3QixVQUFJYyxNQUFNUCxNQUFNUSxLQUFOLENBQVlmLEtBQXRCO0FBQ0EsVUFBR0EsTUFBTWdCLFFBQU4sQ0FBZUYsR0FBZixDQUFILEVBQXVCO0FBQ3RCZixVQUFHVyxZQUFILENBQWdCLFNBQWhCLEVBQTBCLEVBQTFCO0FBQ0EsT0FGRCxNQUVNO0FBQ0xYLFVBQUdZLGVBQUgsQ0FBbUIsU0FBbkI7QUFDQTtBQUNEO0FBQ0Q7QUFDRDtBQUNEO0FBNURLO0FBaEJTLENBQWpCIiwiZmlsZSI6IjMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHtcclxuXHQvL+WumuS5iXNob3fmjIfku6RcclxuXHRzaG93OiB7XHJcblx0XHRtb3VudGVkOiBmdW5jdGlvbihlbCwgdmFsdWUpIHtcclxuXHRcdFx0aWYgKCF2YWx1ZSkge1xyXG5cdFx0XHRcdGVsLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSdcclxuXHRcdFx0fVxyXG5cdFx0fSxcclxuXHRcdHVwZGF0ZWQ6IGZ1bmN0aW9uKGVsLCB2YWx1ZSkge1xyXG5cdFx0XHRpZiAodmFsdWUpIHtcclxuXHRcdFx0XHRlbC5zdHlsZS5kaXNwbGF5ID0gJydcclxuXHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHRlbC5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnXHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHR9LFxyXG5cdG1vZGVsOiB7XHJcblx0XHRtb3VudGVkOiBmdW5jdGlvbihlbCwgdmFsdWUsIG1vZGlmaWVyLCBleHAsIHZub2RlKSB7XHJcblx0XHRcdC8vaW5wdXTmoIfnrb7nmoTlj4zlkJHnu5HlrppcclxuXHRcdFx0aWYgKGVsLm5vZGVOYW1lID09ICdJTlBVVCcpIHtcclxuXHRcdFx0XHQvL+WkjemAieahhuWunueOsOWPjOWQkee7keWumlxyXG5cdFx0XHRcdGlmKGVsLmdldEF0dHJpYnV0ZSgndHlwZScpID09ICdjaGVja2JveCcpe1xyXG5cdFx0XHRcdFx0Ly/luIPlsJTnsbvlnotcclxuXHRcdFx0XHRcdGlmKHR5cGVvZiB2YWx1ZSA9PSAnYm9vbGVhbicpe1xyXG5cdFx0XHRcdFx0XHRpZih2YWx1ZSl7XHJcblx0XHRcdFx0XHRcdFx0ZWwuc2V0QXR0cmlidXRlKCdjaGVja2VkJywnJylcclxuXHRcdFx0XHRcdFx0fWVsc2Uge1xyXG5cdFx0XHRcdFx0XHRcdGVsLnJlbW92ZUF0dHJpYnV0ZSgnY2hlY2tlZCcpXHJcblx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdH1lbHNlIGlmKEFycmF5LmlzQXJyYXkodmFsdWUpKXtcclxuXHRcdFx0XHRcdFx0bGV0IHZhbCA9IHZub2RlLmF0dHJzLnZhbHVlXHJcblx0XHRcdFx0XHRcdGlmKHZhbHVlLmluY2x1ZGVzKHZhbCkpe1xyXG5cdFx0XHRcdFx0XHRcdGVsLnNldEF0dHJpYnV0ZSgnY2hlY2tlZCcsJycpXHJcblx0XHRcdFx0XHRcdH1lbHNlIHtcclxuXHRcdFx0XHRcdFx0XHRlbC5yZW1vdmVBdHRyaWJ1dGUoJ2NoZWNrZWQnKVxyXG5cdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRlbC5hZGRFdmVudExpc3RlbmVyKCdjaGFuZ2UnLGU9PntcclxuXHRcdFx0XHRcdFx0bGV0IGlzQ2hlY2tlZCA9IGUuY3VycmVudFRhcmdldC5jaGVja2VkXHJcblx0XHRcdFx0XHRcdC8v5biD5bCU57G75Z6LXHJcblx0XHRcdFx0XHRcdGlmKHR5cGVvZiB2YWx1ZSA9PSAnYm9vbGVhbicpe1xyXG5cdFx0XHRcdFx0XHRcdFxyXG5cdFx0XHRcdFx0XHR9ZWxzZSBpZihBcnJheS5pc0FycmF5KHZhbHVlKSl7XHJcblx0XHRcdFx0XHRcdFx0bGV0IHZhbCA9IHZub2RlLmF0dHJzLnZhbHVlXHJcblx0XHRcdFx0XHRcdFx0aWYodmFsdWUuaW5jbHVkZXModmFsKSl7XHJcblx0XHRcdFx0XHRcdFx0XHRlbC5zZXRBdHRyaWJ1dGUoJ2NoZWNrZWQnLCcnKVxyXG5cdFx0XHRcdFx0XHRcdH1lbHNlIHtcclxuXHRcdFx0XHRcdFx0XHRcdGVsLnJlbW92ZUF0dHJpYnV0ZSgnY2hlY2tlZCcpXHJcblx0XHRcdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHR9KVxyXG5cdFx0XHRcdH1cclxuXHRcdFx0fVxyXG5cdFx0fSxcclxuXHRcdHVwZGF0ZWQ6ZnVuY3Rpb24oZWwsIHZhbHVlLCBtb2RpZmllciwgZXhwLCB2bm9kZSl7XHJcblx0XHRcdC8vaW5wdXTmoIfnrb7nmoTlj4zlkJHnu5HlrppcclxuXHRcdFx0aWYgKGVsLm5vZGVOYW1lID09ICdJTlBVVCcpIHtcclxuXHRcdFx0XHQvL+WkjemAieahhuWunueOsOWPjOWQkee7keWumlxyXG5cdFx0XHRcdGlmKGVsLmdldEF0dHJpYnV0ZSgndHlwZScpID09ICdjaGVja2JveCcpe1xyXG5cdFx0XHRcdFx0Ly/luIPlsJTnsbvlnotcclxuXHRcdFx0XHRcdGlmKHR5cGVvZiB2YWx1ZSA9PSAnYm9vbGVhbicpe1xyXG5cdFx0XHRcdFx0XHRpZih2YWx1ZSl7XHJcblx0XHRcdFx0XHRcdFx0ZWwuc2V0QXR0cmlidXRlKCdjaGVja2VkJywnJylcclxuXHRcdFx0XHRcdFx0fWVsc2Uge1xyXG5cdFx0XHRcdFx0XHRcdGVsLnJlbW92ZUF0dHJpYnV0ZSgnY2hlY2tlZCcpXHJcblx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdH1lbHNlIGlmKEFycmF5LmlzQXJyYXkodmFsdWUpKXtcclxuXHRcdFx0XHRcdFx0bGV0IHZhbCA9IHZub2RlLmF0dHJzLnZhbHVlXHJcblx0XHRcdFx0XHRcdGlmKHZhbHVlLmluY2x1ZGVzKHZhbCkpe1xyXG5cdFx0XHRcdFx0XHRcdGVsLnNldEF0dHJpYnV0ZSgnY2hlY2tlZCcsJycpXHJcblx0XHRcdFx0XHRcdH1lbHNlIHtcclxuXHRcdFx0XHRcdFx0XHRlbC5yZW1vdmVBdHRyaWJ1dGUoJ2NoZWNrZWQnKVxyXG5cdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9XHJcblx0XHR9XHJcblx0fVxyXG59XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///3\n")}])});